{"version":3,"file":"static/js/769.29cdf676.chunk.js","mappings":"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","sources":["compenents/includes/footer.jsx","services/dashboard/dashboardServices.js","compenents/dashboard/modal/tasks/TaskModal.jsx","compenents/includes/header.jsx","services/authServices.js","services/profil/profileService.js","compenents/dashboard/modal/tasks/CreateTaskModal.jsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../assets/styles/compenents/includes/footer.scss';\n\nconst Footer = () => {\n    const navigate = useNavigate();\n\n    return (\n        <footer className=\"footer\">\n            <div className=\"footer-container\">\n                <div className=\"footer-content\">\n                    <div className=\"footer-brand\">\n                        <div className=\"logo\">\n                            <div className=\"logo-icon\">\n                                <svg viewBox=\"0 0 24 24\" fill=\"none\">\n                                    <rect x=\"3\" y=\"5\" width=\"18\" height=\"14\" rx=\"2\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n                                    <path d=\"M7 9h6M7 12h4M7 15h8\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n                                </svg>\n                            </div>\n                            <span>TaskForce</span>\n                        </div>\n                        <p>Répartition intelligente des tâches pour équipes performantes</p>\n                    </div>\n\n                    <div className=\"footer-links\">\n                        <div className=\"footer-section\">\n                            <h4>Produit</h4>\n                            <ul>\n                                <li><a href=\"#\">Fonctionnalités</a></li>\n                                <li><a href=\"#\">Tarifs</a></li>\n                            </ul>\n                        </div>\n\n                        <div className=\"footer-section\">\n                            <h4>Support</h4>\n                            <ul>\n                                <li><a href=\"#\">Aide</a></li>\n                                <li><a href=\"#\">Contact</a></li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"footer-bottom\">\n                    <p>&copy; 2024 TaskForce. Tous droits réservés.</p>\n                    <div className=\"social-links\">\n                        <a href=\"#\" className=\"social-link\">\n                            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                                <path d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"/>\n                            </svg>\n                        </a>\n                        <a href=\"#\" className=\"social-link\">\n                            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                                <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"/>\n                            </svg>\n                        </a>\n                        <a href=\"#\" className=\"social-link\">\n                            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                                <path d=\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.174-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.096.120.112.225.085.345-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.402.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.357-.629-2.754-1.378l-.748 2.853c-.271 1.043-1.002 2.35-1.492 3.146C9.57 23.812 10.763 24.009 12.017 24c6.624 0 11.99-5.367 11.99-11.988C24.007 5.367 18.641.001.001 12.017z\"/>\n                            </svg>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;","const API_BASE_URL = 'http://localhost:8000/api';\n\nconst apiCall = async (url, options = {}) => {\n    const token = localStorage.getItem('token');\n    \n    const defaultOptions = {\n        headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            ...options.headers\n        }\n    };\n\n    const response = await fetch(url, { ...defaultOptions, ...options });\n    \n    if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        console.error('API Error:', {\n            url,\n            status: response.status,\n            errorData,\n            body: options.body\n        });\n        \n        const error = new Error(errorData.message || errorData.error || `HTTP error! status: ${response.status}`);\n        error.status = response.status;\n        error.errorData = errorData;\n        throw error;\n    }\n    \n    return response.json();\n};\n\nexport const dashboardServices = {\n    getProjects: async () => {\n        return apiCall(`${API_BASE_URL}/projects`);\n    },\n\n    createProject: async (projectData) => {\n        return apiCall(`${API_BASE_URL}/projects`, {\n            method: 'POST',\n            body: JSON.stringify(projectData)\n        });\n    },\n\n    updateProject: async (projectId, projectData) => {\n        return apiCall(`${API_BASE_URL}/projects/${projectId}`, {\n            method: 'PUT',\n            body: JSON.stringify(projectData)\n        });\n    },\n\n    deleteProject: async (projectId) => {\n        return apiCall(`${API_BASE_URL}/projects/${projectId}`, {\n            method: 'DELETE'\n        });\n    },\n\n    addUserToProject: async (projectId, email, role = 'member') => {\n        return apiCall(`${API_BASE_URL}/projects/${projectId}/add-user`, {\n            method: 'POST',\n            body: JSON.stringify({ email, role })\n        });\n    },\n\n    updateUserRole: async (projectId, userId, role) => {\n        return apiCall(`${API_BASE_URL}/projects/${projectId}/update-user-role`, {\n            method: 'PUT',\n            body: JSON.stringify({ userId, role })\n        });\n    },\n\n    removeUserFromProject: async (projectId, userId) => {\n        return apiCall(`${API_BASE_URL}/projects/${projectId}/remove-user`, {\n            method: 'DELETE',\n            body: JSON.stringify({ userId })\n        });\n    },\n\n    // =tâches\n    getTasks: async (projectId) => {\n        const url = projectId \n            ? `${API_BASE_URL}/tasks?projectId=${projectId}`\n            : `${API_BASE_URL}/tasks`;\n        return apiCall(url);\n    },\n\n    createTask: async (taskData) => {\n        return apiCall(`${API_BASE_URL}/tasks`, {\n            method: 'POST',\n            body: JSON.stringify(taskData)\n        });\n    },\n\n    updateTask: async (taskId, taskData) => {\n        return apiCall(`${API_BASE_URL}/tasks/${taskId}`, {\n            method: 'PUT',\n            body: JSON.stringify(taskData)\n        });\n    },\n\n    deleteTask: async (taskId) => {\n        return apiCall(`${API_BASE_URL}/tasks/${taskId}`, {\n            method: 'DELETE'\n        });\n    },\n\n    uploadTaskImage: async (taskId, imageFile) => {\n        const token = localStorage.getItem('token');\n        const formData = new FormData();\n        formData.append('image', imageFile);\n\n        const response = await fetch(`${API_BASE_URL}/tasks/${taskId}/upload-image`, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${token}`\n            },\n            body: formData\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json().catch(() => ({}));\n            throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n        }\n\n        return response.json();\n    },\n\n    deleteTaskImage: async (taskId, imagePath) => {\n        return apiCall(`${API_BASE_URL}/tasks/${taskId}/delete-image`, {\n            method: 'DELETE',\n            body: JSON.stringify({ imagePath })\n        });\n    },\n\n    addSkillsToTask: async (taskId, skillIds) => {\n        return apiCall(`${API_BASE_URL}/tasks/${taskId}/add-skills`, {\n            method: 'POST',\n            body: JSON.stringify({ skillIds })\n        });\n    },\n\n    assignTaskAutomatically: async (taskId) => {\n        return apiCall(`${API_BASE_URL}/tasks/${taskId}/assign`, {\n            method: 'POST'\n        });\n    },\n\n    assignAllProjectTasks: async (projectId) => {\n        return apiCall(`${API_BASE_URL}/tasks/project/${projectId}/assign-all`, {\n            method: 'POST'\n        });\n    },\n\n    getProjectWorkload: async (projectId) => {\n        return apiCall(`${API_BASE_URL}/tasks/project/${projectId}/workload`);\n    },\n\n    // COlonnes\n    getColumns: async (projectId) => {\n        return apiCall(`${API_BASE_URL}/columns?projectId=${projectId}`);\n    },\n\n    createColumn: async (columnData) => {\n        return apiCall(`${API_BASE_URL}/columns`, {\n            method: 'POST',\n            body: JSON.stringify(columnData)\n        });\n    },\n\n    updateColumn: async (columnId, columnData) => {\n        return apiCall(`${API_BASE_URL}/columns/${columnId}`, {\n            method: 'PUT',\n            body: JSON.stringify(columnData)\n        });\n    },\n\n    deleteColumn: async (columnId) => {\n        return apiCall(`${API_BASE_URL}/columns/${columnId}`, {\n            method: 'DELETE'\n        });\n    },\n\n    // compétences\n    getSkills: async () => {\n        return apiCall(`${API_BASE_URL}/skills`);\n    },\n\n    createSkill: async (skillData) => {\n        return apiCall(`${API_BASE_URL}/skills`, {\n            method: 'POST',\n            body: JSON.stringify(skillData)\n        });\n    },\n\n    updateSkill: async (skillId, skillData) => {\n        return apiCall(`${API_BASE_URL}/skills/${skillId}`, {\n            method: 'PUT',\n            body: JSON.stringify(skillData)\n        });\n    },\n\n    deleteSkill: async (skillId) => {\n        return apiCall(`${API_BASE_URL}/skills/${skillId}`, {\n            method: 'DELETE'\n        });\n    },\n\n    // utilisateurs\n    getUsers: async () => {\n        return apiCall(`${API_BASE_URL}/users`);\n    },\n\n    getAllUsers: async () => {\n        return apiCall(`${API_BASE_URL}/users`);\n    },\n\n    getProjectUsers: async (projectId) => {\n        return apiCall(`${API_BASE_URL}/projects/${projectId}/users`);\n    },\n\n    getProfile: async () => {\n        return apiCall(`${API_BASE_URL}/user`);\n    },\n\n    // compétences utilisateur\n    getUserSkills: async () => {\n        return apiCall(`${API_BASE_URL}/user-skills`);\n    },\n\n    getUserSkillsByUserId: async (userId) => {\n        return apiCall(`${API_BASE_URL}/users/${userId}/skills`);\n    },\n\n    addUserSkill: async (skillData) => {\n        return apiCall(`${API_BASE_URL}/user-skills`, {\n            method: 'POST',\n            body: JSON.stringify(skillData)\n        });\n    },\n\n    updateUserSkill: async (userSkillId, skillData) => {\n        return apiCall(`${API_BASE_URL}/user-skills/${userSkillId}`, {\n            method: 'PUT',\n            body: JSON.stringify(skillData)\n        });\n    },\n\n    deleteUserSkill: async (skillId) => {\n        return apiCall(`${API_BASE_URL}/user-skills/skill/${skillId}`, {\n            method: 'DELETE'\n        });\n    },\n\n    getProjectUserSkills: async (projectId) => {\n        return apiCall(`${API_BASE_URL}/projects/${projectId}/skills/users`);\n    },\n\n    getAllAvailableProjectSkills: async (projectId) => {\n        return apiCall(`${API_BASE_URL}/projects/${projectId}/skills/available`);\n    },\n\n    createProjectSkill: async (projectId, skillData) => {\n        return apiCall(`${API_BASE_URL}/projects/${projectId}/skills`, {\n            method: 'POST',\n            body: JSON.stringify(skillData)\n        });\n    },\n\n    deleteProjectSkill: async (skillId) => {\n        return apiCall(`${API_BASE_URL}/projects/skills/${skillId}`, {\n            method: 'DELETE'\n        });\n    }\n};\n","import React, { useState, useEffect } from 'react';\nimport { dashboardServices } from '../../../../services/dashboard/dashboardServices';\nimport authService from '../../../../services/authServices';\nimport '../../../../assets/styles/Dashboard.scss';\n\nconst TaskModal = ({ task, isOpen, onClose, onTaskUpdate, project, mode = 'view', currentUserRole }) => {\n    const [isEditing, setIsEditing] = useState(mode === 'edit');\n    const [formData, setFormData] = useState({\n        title: '',\n        description: '',\n        priority: 'medium',\n        status: '',\n        level: 'intermediate',\n        estimatedHours: 1,\n        skillIds: []\n    });\n    const [skills, setSkills] = useState([]);\n    const [columns, setColumns] = useState([]);\n    const [newSkill, setNewSkill] = useState({ name: '', category: 'Général', level: 1 });\n    const [showAddSkill, setShowAddSkill] = useState(false);\n    const [selectedImage, setSelectedImage] = useState(null);\n    const [uploading, setUploading] = useState(false);\n    const [images, setImages] = useState([]);\n    const [message, setMessage] = useState('');\n    const [currentUser, setCurrentUser] = useState(null);\n\n    useEffect(() => {\n        if (task) {\n            const skillIds = task.requiredSkills ? task.requiredSkills.map(skill => skill.id) : [];\n            \n            setFormData({\n                title: task.title || '',\n                description: task.description || '',\n                priority: task.priority || 'medium',\n                status: task.status || '',\n                level: task.level || 'intermediate',\n                estimatedHours: task.estimatedHours || 1,\n                skillIds: skillIds\n            });\n            setImages(Array.isArray(task?.images) ? task.images : []);\n        }\n        if (isOpen) {\n            fetchSkills();\n            fetchColumns();\n            const user = JSON.parse(localStorage.getItem('user'));\n            setCurrentUser(user);\n        }\n    }, [task, isOpen]);\n\n    useEffect(() => {\n        if (isOpen) {\n            const prevOverflow = document.body.style.overflow;\n            document.body.style.overflow = 'hidden';\n            return () => {\n                document.body.style.overflow = prevOverflow;\n            };\n        }\n    }, [isOpen]);\n\n    const fetchSkills = async () => {\n        try {\n            if (project && project.id) {\n                const data = await dashboardServices.getAllAvailableProjectSkills(project.id);\n                const projectSkills = data.skills || [];\n                \n                if (task && task.requiredSkills) {\n                    const missingSkills = task.requiredSkills.filter(taskSkill => \n                        !projectSkills.some(projectSkill => projectSkill.id === taskSkill.id)\n                    );\n                    \n                    if (missingSkills.length > 0) {\n                        setSkills([...projectSkills, ...missingSkills]);\n                    } else {\n                        setSkills(projectSkills);\n                    }\n                } else {\n                    setSkills(projectSkills);\n                }\n            }\n        } catch (err) {\n            console.error('Erreur lors du chargement des compétences:', err);\n        }\n    };\n\n    const fetchColumns = async () => {\n        try {\n            const data = await dashboardServices.getColumns(project.id);\n            setColumns(data.columns);\n        } catch (err) {\n            console.error('Erreur lors du chargement des colonnes:', err);\n        }\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({\n            ...prev,\n            [name]: name === 'estimatedHours' ? parseFloat(value) || 1 : value\n        }));\n    };\n\n    const toggleSkill = (skillId) => {\n        setFormData(prev => ({\n            ...prev,\n            skillIds: prev.skillIds.includes(skillId)\n                ? prev.skillIds.filter(id => id !== skillId)\n                : [...prev.skillIds, skillId]\n        }));\n    };\n\n    const createSkill = async () => {\n        try {\n            const data = await dashboardServices.createProjectSkill(project.id, newSkill);\n            setSkills(prev => [...prev, data.skill]);\n            setFormData(prev => ({\n                ...prev,\n                skillIds: [...prev.skillIds, data.skill.id]\n            }));\n            setNewSkill({ name: '', category: 'Général', level: 1 });\n            setShowAddSkill(false);\n        } catch (err) {\n            console.error('Erreur lors de la création de la compétence:', err);\n        }\n    };\n\n    const deleteSkill = async (skillId) => {\n        try {\n            await dashboardServices.deleteProjectSkill(skillId);\n            setSkills(prev => prev.filter(skill => skill.id !== skillId));\n            setFormData(prev => ({\n                ...prev,\n                skillIds: prev.skillIds.filter(id => id !== skillId)\n            }));\n        } catch (err) {\n            console.error('Erreur lors de la suppression de la compétence:', err);\n        }\n    };\n\n    const canManageSkills = () => {\n        if (!currentUser) return false;\n        return ['responsable_projet', 'manager'].includes(currentUser.role);\n    };\n\n    const canDeleteSkill = (skill) => {\n        if (!currentUser || !skill.createdBy) return false;\n        return skill.type === 'project_skill' && skill.createdBy.id === currentUser.id;\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!formData.title.trim()) {\n            alert('Le titre est requis');\n            return;\n        }\n        try {\n            await onTaskUpdate(task.id, formData);\n            setIsEditing(false);\n        } catch (err) {\n            console.error('Erreur lors de la mise à jour:', err);\n        }\n    };\n\n    const handleImageUpload = async (event) => {\n        const file = event.target.files[0];\n        if (!file) return;\n        await uploadImage(file);\n    };\n\n    const uploadImage = async (file) => {\n        setUploading(true);\n        try {\n            const response = await dashboardServices.uploadTaskImage(task.id, file);\n            if (response.success) {\n                const imagePath = typeof response.image === 'object' ? response.image.path || response.image.filename : response.image;\n                setImages(prev => [...prev, imagePath]);\n                setMessage('Image ajoutée avec succès');\n                setTimeout(() => setMessage(''), 3000);\n            }\n        } catch (error) {\n            console.error('Erreur lors de l\\'upload:', error);\n            setMessage('Erreur lors de l\\'upload de l\\'image');\n            setTimeout(() => setMessage(''), 3000);\n        } finally {\n            setUploading(false);\n        }\n    };\n\n    const deleteImage = async (imageIndex) => {\n        try {\n            const imagePath = images[imageIndex];\n            await dashboardServices.deleteTaskImage(task.id, imagePath);\n            setImages(prev => prev.filter((_, index) => index !== imageIndex));\n            setMessage('Image supprimée avec succès');\n            setTimeout(() => setMessage(''), 3000);\n        } catch (error) {\n            console.error('Erreur lors de la suppression:', error);\n            setMessage('Erreur lors de la suppression de l\\'image');\n            setTimeout(() => setMessage(''), 3000);\n        }\n    };\n\n    const formatDate = (dateString) => {\n        const date = new Date(dateString);\n        return date.toLocaleDateString('fr-FR', {\n            day: '2-digit',\n            month: '2-digit',\n            year: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit'\n        });\n    };\n\n    const getPriorityColor = (priority) => {\n        switch (priority) {\n            case 'high': return '#ef4444';\n            case 'medium': return '#f59e0b';\n            case 'low': return '#10b981';\n            default: return '#6b7280';\n        }\n    };\n\n    const getPriorityLabel = (priority) => {\n        switch (priority) {\n            case 'high': return 'Haute';\n            case 'medium': return 'Moyenne';\n            case 'low': return 'Basse';\n            default: return 'Non définie';\n        }\n    };\n\n    const getLevelLabel = (level) => {\n        switch (level) {\n            case 'beginner': return 'Débutant';\n            case 'intermediate': return 'Intermédiaire';\n            case 'advanced': return 'Avancé';\n            case 'expert': return 'Expert';\n            default: return 'Non défini';\n        }\n    };\n\n    if (!isOpen || !task) return null;\n\n    return (\n        <div className=\"modal-overlay\" onClick={onClose}>\n            <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"modal-header\">\n                    <h2>{isEditing ? 'Modifier la tâche' : 'Détails de la tâche'}</h2>\n                    <div className=\"header-actions\">\n                        {!isEditing && authService.canModifyTasks(currentUserRole) && (\n                            <button \n                                className=\"btn-edit\"\n                                onClick={() => setIsEditing(true)}\n                                title=\"Modifier cette tâche\"\n                            >\n                                Modifier\n                            </button>\n                        )}\n                        <button className=\"modal-close\" onClick={onClose}>×</button>\n                    </div>\n                </div>\n\n                {isEditing ? (\n                    <form onSubmit={handleSubmit} className=\"modal-form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"title\">Titre *</label>\n                            <input\n                                type=\"text\"\n                                id=\"title\"\n                                name=\"title\"\n                                value={formData.title}\n                                onChange={handleChange}\n                                placeholder=\"Titre de la tâche\"\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Description</label>\n                            <textarea\n                                id=\"description\"\n                                name=\"description\"\n                                value={formData.description}\n                                onChange={handleChange}\n                                placeholder=\"Description de la tâche\"\n                                rows=\"4\"\n                            />\n                        </div>\n\n                        <div className=\"form-row\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"priority\">Priorité</label>\n                                <select\n                                    id=\"priority\"\n                                    name=\"priority\"\n                                    value={formData.priority}\n                                    onChange={handleChange}\n                                >\n                                    <option value=\"low\">Basse</option>\n                                    <option value=\"medium\">Moyenne</option>\n                                    <option value=\"high\">Haute</option>\n                                </select>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"status\">Statut</label>\n                                <select\n                                    id=\"status\"\n                                    name=\"status\"\n                                    value={formData.status}\n                                    onChange={handleChange}\n                                >\n                                    {columns.map(column => (\n                                        <option key={column.id} value={column.identifier}>\n                                            {column.name}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className=\"form-row\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"level\">Niveau requis</label>\n                                <select\n                                    id=\"level\"\n                                    name=\"level\"\n                                    value={formData.level}\n                                    onChange={handleChange}\n                                >\n                                    <option value=\"beginner\">Débutant</option>\n                                    <option value=\"intermediate\">Intermédiaire</option>\n                                    <option value=\"advanced\">Avancé</option>\n                                    <option value=\"expert\">Expert</option>\n                                </select>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"estimatedHours\">Heures estimées *</label>\n                                <input\n                                    type=\"number\"\n                                    id=\"estimatedHours\"\n                                    name=\"estimatedHours\"\n                                    min=\"0.5\"\n                                    max=\"200\"\n                                    step=\"0.5\"\n                                    value={formData.estimatedHours}\n                                    onChange={handleChange}\n                                    required\n                                    placeholder=\"Ex: 8\"\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Compétences requises</label>\n                            {formData.skillIds.length === 0 && (\n                                <p className=\"no-skills-message\">\n                                    Aucune compétence sélectionnée. Cliquez sur les étiquettes pour les sélectionner.\n                                </p>\n                            )}\n                            <div className=\"skills-labels-container\">\n                                {Array.isArray(skills) && skills.map(skill => {\n                                    const isSelected = formData.skillIds.includes(skill.id);\n                                    const canDelete = canDeleteSkill(skill);\n                                    \n                                    return (\n                                        <div\n                                            key={skill.id}\n                                            className={`skill-label ${isSelected ? 'selected' : ''} ${skill.type === 'project_skill' ? 'project-skill' : 'user-skill'}`}\n                                            onClick={() => toggleSkill(skill.id)}\n                                        >\n                                            <span className=\"skill-label-name\">{skill.name}</span>\n                                            {skill.type === 'project_skill' && (\n                                                <span className=\"skill-type-badge\">Projet</span>\n                                            )}\n                                            {canDelete && (\n                                                <button\n                                                    type=\"button\"\n                                                    className=\"skill-delete-btn\"\n                                                    onClick={(e) => {\n                                                        e.stopPropagation();\n                                                        deleteSkill(skill.id);\n                                                    }}\n                                                    title=\"Supprimer cette compétence\"\n                                                >\n                                                    ×\n                                                </button>\n                                            )}\n                                            {isSelected && (\n                                                <span className=\"skill-label-check\">✓</span>\n                                            )}\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                            \n                            {canManageSkills() && (\n                                <div className=\"skill-management\">\n                                    {!showAddSkill ? (\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn-add-skill\"\n                                            onClick={() => setShowAddSkill(true)}\n                                        >\n                                            + Ajouter une compétence au projet\n                                        </button>\n                                    ) : (\n                                        <div className=\"add-skill-form\">\n                                            <h4>Créer une nouvelle compétence</h4>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-group\">\n                                                    <label>Nom de la compétence</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={newSkill.name}\n                                                        onChange={(e) => setNewSkill(prev => ({ ...prev, name: e.target.value }))}\n                                                        placeholder=\"Ex: React, Symfony...\"\n                                                    />\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label>Catégorie</label>\n                                                    <select\n                                                        value={newSkill.category}\n                                                        onChange={(e) => setNewSkill(prev => ({ ...prev, category: e.target.value }))}\n                                                    >\n                                                        <option value=\"Général\">Général</option>\n                                                        <option value=\"Frontend\">Frontend</option>\n                                                        <option value=\"Backend\">Backend</option>\n                                                        <option value=\"DevOps\">DevOps</option>\n                                                        <option value=\"Design\">Design</option>\n                                                    </select>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label>Niveau</label>\n                                                    <select\n                                                        value={newSkill.level}\n                                                        onChange={(e) => setNewSkill(prev => ({ ...prev, level: parseInt(e.target.value) }))}\n                                                    >\n                                                        <option value={1}>1 - Débutant</option>\n                                                        <option value={2}>2 - Intermédiaire</option>\n                                                        <option value={3}>3 - Avancé</option>\n                                                        <option value={4}>4 - Expert</option>\n                                                        <option value={5}>5 - Maître</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-actions\">\n                                                <button type=\"button\" onClick={createSkill} disabled={!newSkill.name.trim()}>\n                                                    Créer\n                                                </button>\n                                                <button type=\"button\" onClick={() => setShowAddSkill(false)}>\n                                                    Annuler\n                                                </button>\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n                        </div>\n\n                        <div className=\"modal-actions\">\n                            <button type=\"button\" onClick={() => setIsEditing(false)} className=\"btn-secondary\">\n                                Annuler\n                            </button>\n                            <button type=\"submit\" className=\"btn-primary\">\n                                Enregistrer\n                            </button>\n                        </div>\n                    </form>\n                ) : (\n                    <div className=\"modal-form\">\n                        <div className=\"form-group\">\n                            <label>Titre</label>\n                            <div className=\"task-display-value\">{task.title}</div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Description</label>\n                            <div className=\"task-display-value\">{task.description || 'Aucune description'}</div>\n                        </div>\n\n                        <div className=\"form-row\">\n                            <div className=\"form-group\">\n                                <label>Priorité</label>\n                                <div className=\"task-display-value\">\n                                    <span \n                                        className=\"priority-badge\"\n                                        style={{ backgroundColor: getPriorityColor(task.priority) }}\n                                    >\n                                        {getPriorityLabel(task.priority)}\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Statut</label>\n                                <div className=\"task-display-value\">{task.status || 'Non défini'}</div>\n                            </div>\n                        </div>\n\n                        <div className=\"form-row\">\n                            <div className=\"form-group\">\n                                <label>Niveau requis</label>\n                                <div className=\"task-display-value\">\n                                    <span className=\"level-badge\">{getLevelLabel(task.level)}</span>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Heures estimées</label>\n                                <div className=\"task-display-value\">\n                                    <span className=\"hours-badge\">{task.estimatedHours || 1}h</span>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"form-row\">\n                            <div className=\"form-group\">\n                                <label>Créé le</label>\n                                <div className=\"task-display-value\">{formatDate(task.createdAt)}</div>\n                            </div>\n                            {task.assignedTo && (\n                                <div className=\"form-group\">\n                                    <label>Assignée à</label>\n                                    <div className=\"task-display-value\">\n                                        {typeof task.assignedTo === 'object' \n                                            ? `${task.assignedTo.firstname} ${task.assignedTo.lastname}`\n                                            : task.assignedTo\n                                        }\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Compétences requises</label>\n                            {task.requiredSkills && task.requiredSkills.length > 0 ? (\n                                <div className=\"skills-labels-container\">\n                                    {task.requiredSkills.map(skill => (\n                                        <div\n                                            key={skill.id}\n                                            className={`skill-label selected ${skill.type === 'project_skill' ? 'project-skill' : 'user-skill'}`}\n                                        >\n                                            <span className=\"skill-label-name\">{skill.name}</span>\n                                            {skill.type === 'project_skill' && (\n                                                <span className=\"skill-type-badge\">Projet</span>\n                                            )}\n                                            <span className=\"skill-label-check\">✓</span>\n                                        </div>\n                                    ))}\n                                </div>\n                            ) : (\n                                <div className=\"task-display-value\">Aucune compétence requise</div>\n                            )}\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Images</label>\n                            {images.length > 0 ? (\n                                <div className=\"images-grid\">\n                                    {images.filter(image => image && typeof image === 'string').map((imagePath, index) => (\n                                        <div key={`image-${index}`} className=\"image-item\">\n                                            <img \n                                                src={`http://localhost:8000/${imagePath}`} \n                                                alt=\"Task image\"\n                                                onClick={() => setSelectedImage(`http://localhost:8000/${imagePath}`)}\n                                            />\n                                            <button \n                                                className=\"delete-image-btn\"\n                                                onClick={() => deleteImage(index)}\n                                                title=\"Supprimer cette image\"\n                                            >\n                                                ×\n                                            </button>\n                                        </div>\n                                    ))}\n                                </div>\n                            ) : (\n                                <div className=\"task-display-value\">Aucune image</div>\n                            )}\n                            \n                            <div className=\"upload-section\">\n                                <input\n                                    type=\"file\"\n                                    accept=\"image/*\"\n                                    onChange={handleImageUpload}\n                                    disabled={uploading}\n                                    id=\"image-upload\"\n                                    style={{ display: 'none' }}\n                                />\n                                <label htmlFor=\"image-upload\" className=\"upload-btn\">\n                                    {uploading ? 'Upload en cours...' : '+ Ajouter une image'}\n                                </label>\n                            </div>\n                        </div>\n\n                        {message && (\n                            <div className=\"message\">\n                                {message}\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n\n            {selectedImage && (\n                <div className=\"image-overlay\" onClick={() => setSelectedImage(null)}>\n                    <img src={selectedImage} alt=\"Full size\" />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default TaskModal;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport authService from \"../../services/authServices\";\nimport profileService from \"../../services/profil/profileService\";\nimport '../../assets/styles/compenents/includes/header.scss';\n\nconst Header = () => {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [canAccessAdmin, setCanAccessAdmin] = useState(false);\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    useEffect(() => {\n        const checkAuth = async () => {\n            try {\n                const isAuth = await authService.isAuthenticated();\n                if (isAuth) {\n                    const userProfile = await profileService.getProfile();\n                    setIsAuthenticated(true);\n                     \n                    try {\n                        const { dashboardServices } = await import('../../services/dashboard/dashboardServices');\n                        const projectsData = await dashboardServices.getProjects();\n                        const hasAdminAccess = authService.canAccessAdminGlobally(projectsData.projects, userProfile.id);\n                        setCanAccessAdmin(hasAdminAccess);\n                    } catch (error) {\n                        console.error('Erreur lors de la vérification des permissions admin:', error);\n                        setCanAccessAdmin(false);\n                    }\n                } else {\n                    setIsAuthenticated(false);\n                    setCanAccessAdmin(false);\n                }\n            } catch (error) {\n                setIsAuthenticated(false);\n                setCanAccessAdmin(false);\n            }\n        };\n\n        checkAuth();\n    }, [location.pathname]);\n\n    useEffect(() => {\n        setIsMenuOpen(false);\n    }, [location.pathname]);\n\n\n    const toggleMenu = () => {\n        setIsMenuOpen(!isMenuOpen);\n    };\n\n    const handleLogout = () => {\n        authService.logout();\n        setIsAuthenticated(false);\n        navigate('/');\n    };\n\n    return (\n        <header className=\"header\">\n            <div className=\"header-container\">\n                <div className=\"header-left\">\n                    <div className=\"logo\" onClick={() => navigate('/')}>\n                        <div className=\"logo-icon\">\n                            <svg viewBox=\"0 0 24 24\" fill=\"none\">\n                                <rect x=\"3\" y=\"5\" width=\"18\" height=\"14\" rx=\"2\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n                                <path d=\"M7 9h6M7 12h4M7 15h8\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n                            </svg>\n                        </div>\n                        <span className=\"logo-text\">TaskForce</span>\n                    </div>\n\n                    <nav className={`nav-links ${isMenuOpen ? 'mobile-open' : ''}`}>\n                        <button className=\"nav-link\">Fonctionnalités</button>\n                        {isAuthenticated && (\n                            <>\n                                <button className=\"nav-link\" onClick={() => navigate('/dashboard')}>\n                                    Mes Tableaux\n                                </button>\n                                {canAccessAdmin && (\n                                    <button className=\"nav-link\" onClick={() => navigate('/admin')}>\n                                        Admin\n                                    </button>\n                                )}\n                                <button className=\"nav-link\" onClick={() => navigate('/my-account')}>\n                                    Mon Compte\n                                </button>\n                            </>\n                        )}\n                    </nav>\n                </div>\n\n                <div className=\"header-right\">\n                    {isAuthenticated ? (\n                        <>\n                            <button className=\"btn-login\" onClick={() => navigate('/dashboard')}>\n                                Mes Tableaux\n                            </button>\n                            {canAccessAdmin && (\n                                <button className=\"btn-admin\" onClick={() => navigate('/admin')}>\n                                    Admin\n                                </button>\n                            )}\n                            <button className=\"btn-signup\" onClick={() => navigate('/account')}>\n                                Mon Compte\n                            </button>\n                        </>\n                    ) : (\n                        <>\n                            <button className=\"btn-login\" onClick={() => navigate('/login')}>\n                                Connexion\n                            </button>\n                            <button className=\"btn-signup\" onClick={() => navigate('/register')}>\n                                Créer un compte\n                            </button>\n                        </>\n                    )}\n\n                    <button \n                        className=\"mobile-menu-toggle\" \n                        onClick={toggleMenu}\n                        aria-label=\"Toggle mobile menu\"\n                        aria-expanded={isMenuOpen}\n                    >\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </button>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\nconst api = axios.create({\n    baseURL: API_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n    timeout: 10000,\n});\nconst SecurityUtils = {\n    isValidJWT: (token) => {\n        if (!token || typeof token !== 'string') return false;\n        \n        try {\n            const parts = token.split('.');\n            if (parts.length !== 3) return false;\n            \n            const header = JSON.parse(atob(parts[0]));\n            if (!header.alg || !header.typ) return false;\n            \n            const payload = JSON.parse(atob(parts[1]));\n            const now = Math.floor(Date.now() / 1000);\n            \n            return payload.exp && payload.exp > now;\n        } catch (error) {\n            console.error('Token validation error:', error);\n            return false;\n        }\n    },\n\n    clearStorage: () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        localStorage.removeItem('refreshToken');\n        sessionStorage.clear();\n        \n        document.cookie.split(\";\").forEach(cookie => {\n            const eqPos = cookie.indexOf(\"=\");\n            const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n            document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/`;\n        });\n    },\n\n    sanitizeUserData: (userData) => {\n        if (!userData || typeof userData !== 'object') return null;\n        \n        return {\n            id: userData.id,\n            email: userData.email,\n            firstname: userData.firstname?.trim(),\n            lastname: userData.lastname?.trim(),\n            role: userData.role,\n        };\n    },\n\n    createRateLimiter: (maxRequests = 5, windowMs = 600000) => {\n        const requests = new Map();\n        \n        return (key) => {\n            const now = Date.now();\n            const windowStart = now - windowMs;\n            \n            if (!requests.has(key)) {\n                requests.set(key, []);\n            }\n            \n            const userRequests = requests.get(key).filter(time => time > windowStart);\n            \n            if (userRequests.length >= maxRequests) {\n                throw new Error('Trop de tentatives, veuillez patienter');\n            }\n            \n            userRequests.push(now);\n            requests.set(key, userRequests);\n        };\n    }\n};\n\nconst loginRateLimiter = SecurityUtils.createRateLimiter(5, 300000);\n\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        \n        if (token) {\n            if (SecurityUtils.isValidJWT(token)) {\n                config.headers.Authorization = `Bearer ${token}`;\n            } else {\n                console.warn('Token invalide détecté, nettoyage...');\n                SecurityUtils.clearStorage();\n            }\n        }\n        \n        config.headers['X-Request-ID'] = `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n        \n        return config;\n    },\n    (error) => {\n        console.error('Erreur intercepteur requête:', error);\n        return Promise.reject(error);\n    }\n);\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        const status = error.response?.status;\n        const config = error.config;\n        \n        switch (status) {\n            case 401:\n                console.warn('Token expiré ou invalide');\n                SecurityUtils.clearStorage();\n                 \n                const publicPaths = ['/login', '/register', '/', '/home'];\n                const currentPath = window.location.pathname;\n                \n                if (!publicPaths.some(path => currentPath.includes(path))) {\n                    sessionStorage.setItem('returnUrl', currentPath);\n                    window.location.replace('/login');\n                }\n                break;\n                \n            case 403:\n                console.error('Accès refusé:', error.response.data);\n                break;\n                \n            case 429:\n                console.warn('Rate limit atteint');\n                break;\n                \n            case 422:\n                console.error('Données invalides:', error.response.data);\n                break;\n                \n            default:\n                if (status >= 500) {\n                    console.error('Erreur serveur:', error.response?.data);\n                }\n        }\n        \n        return Promise.reject(error);\n    }\n);\nconst authService = {\n    register: async (userData) => {\n        try {\n            if (!userData.email || !userData.password || !userData.firstname || !userData.lastname) {\n                throw new Error('Tous les champs sont requis');\n            }\n            \n            if (userData.password.length < 8) {\n                throw new Error('Le mot de passe doit contenir au moins 8 caractères');\n            }\n            \n            if (!/[A-Z]/.test(userData.password)) {\n                throw new Error('Le mot de passe doit contenir au moins une majuscule');\n            }\n            \n            if (!/[0-9]/.test(userData.password)) {\n                throw new Error('Le mot de passe doit contenir au moins un chiffre');\n            }\n            \n            const sanitizedData = {\n                email: userData.email.trim().toLowerCase(),\n                password: userData.password,\n                firstname: userData.firstname.trim(),\n                lastname: userData.lastname.trim()\n            };\n            \n            const response = await api.post('/register', sanitizedData);\n            return response.data;\n        } catch (error) {\n            console.error('Erreur inscription:', error);\n            throw error.response?.data || { message: error.message };\n        }\n    },\n\n    login: async (credentials) => {\n        try {\n            if (!credentials.email || !credentials.password) {\n                throw new Error('Email et mot de passe requis');\n            }\n            \n            loginRateLimiter(credentials.email);\n            \n            const loginData = {\n                username: credentials.email.trim().toLowerCase(),\n                password: credentials.password\n            };\n            \n            const response = await api.post('/login', loginData);\n            const { token, user, refreshToken } = response.data;\n            \n            if (!token || !SecurityUtils.isValidJWT(token)) {\n                throw new Error('Token invalide reçu du serveur');\n            }\n            \n            localStorage.setItem('token', token);\n            \n            if (refreshToken && SecurityUtils.isValidJWT(refreshToken)) {\n                localStorage.setItem('refreshToken', refreshToken);\n            }\n            \n            if (user) {\n                const sanitizedUser = SecurityUtils.sanitizeUserData(user);\n                if (sanitizedUser) {\n                    localStorage.setItem('user', JSON.stringify(sanitizedUser));\n                }\n            }\n            \n            return response.data;\n        } catch (error) {\n            console.error('Erreur connexion:', error);\n            throw error.response?.data || { message: error.message };\n        }\n    },\n\n    logout: async () => {\n        try {\n            const token = localStorage.getItem('token');\n            \n            if (token && SecurityUtils.isValidJWT(token)) {\n                await api.post('/logout');\n            }\n        } catch (error) {\n            console.error('Erreur lors de la déconnexion serveur:', error);\n        } finally {\n            SecurityUtils.clearStorage();\n            window.location.replace('/login');\n        }\n    },\n\n    hasToken: () => {\n        const token = localStorage.getItem('token');\n        return token && SecurityUtils.isValidJWT(token);\n    },\n\n    isAuthenticated: async () => {\n        const token = localStorage.getItem('token');\n        \n        if (!token || !SecurityUtils.isValidJWT(token)) {\n            SecurityUtils.clearStorage();\n            return false;\n        }\n\n        try {\n            const response = await api.get('/user');\n            \n            if (response.data && response.data.id) {\n                return true;\n            } else {\n                throw new Error('Réponse utilisateur invalide');\n            }\n        } catch (error) {\n            console.warn('Vérification authentification échouée:', error.message);\n            SecurityUtils.clearStorage();\n            return false;\n        }\n    },\n\n    getToken: () => {\n        const token = localStorage.getItem('token');\n        return SecurityUtils.isValidJWT(token) ? token : null;\n    },\n\n    refreshToken: async () => {\n        try {\n            const refreshToken = localStorage.getItem('refreshToken');\n            \n            if (!refreshToken || !SecurityUtils.isValidJWT(refreshToken)) {\n                throw new Error('Refresh token invalide');\n            }\n            \n            const response = await api.post('/refresh-token', { refreshToken });\n            const { token: newToken } = response.data;\n            \n            if (!SecurityUtils.isValidJWT(newToken)) {\n                throw new Error('Nouveau token invalide');\n            }\n            \n            localStorage.setItem('token', newToken);\n            return newToken;\n        } catch (error) {\n            console.error('Erreur refresh token:', error);\n            SecurityUtils.clearStorage();\n            throw error;\n        }\n    },\n\n    getCurrentUser: () => {\n        try {\n            const userStr = localStorage.getItem('user');\n            if (!userStr) return null;\n            \n            const user = JSON.parse(userStr);\n            return SecurityUtils.sanitizeUserData(user);\n        } catch (error) {\n            console.error('Erreur parsing utilisateur:', error);\n            localStorage.removeItem('user');\n            return null;\n        }\n    },\n\n    canAccessAdmin: (userRole) => {\n        return userRole && (userRole === 'manager' || userRole === 'responsable_projet');\n    },\n\n    canModifyTasks: (userRole) => {\n        return userRole === 'responsable_projet';\n    },\n\n    canManageUsers: (userRole) => {\n        return userRole === 'responsable_projet';\n    },\n\n    canManageProject: (userRole) => {\n        return userRole === 'responsable_projet';\n    },\n\n    isManager: (userRole) => {\n        return userRole === 'manager';\n    },\n\n    isResponsableProjet: (userRole) => {\n        return userRole === 'responsable_projet';\n    },\n\n    isCollaborateur: (userRole) => {\n        return userRole === 'collaborateur';\n    },\n\n    canAccessAdminGlobally: (projects, userId) => {\n        if (!projects || !Array.isArray(projects) || !userId) return false;\n        \n        return projects.some(project => {\n            const userRole = authService.getUserRoleInProject(project, userId);\n            return userRole === 'manager' || userRole === 'responsable_projet';\n        });\n    },\n\n    getAdminAccessibleProjects: (projects, userId) => {\n        if (!projects || !Array.isArray(projects) || !userId) return [];\n        \n        return projects.filter(project => {\n            const userRole = authService.getUserRoleInProject(project, userId);\n            return userRole === 'manager' || userRole === 'responsable_projet';\n        });\n    },\n\n    getUserRoleInProject: (project, userId) => {\n        if (!project || !project.users || !userId) return null;\n        const userInProject = project.users.find(u => u.id === userId);\n        return userInProject?.role || null;\n    },\n\n    getCurrentUserRole: () => {\n        return localStorage.getItem('currentUserRole');\n    },\n\n    setCurrentUserRole: (role) => {\n        if (role) {\n            localStorage.setItem('currentUserRole', role);\n        } else {\n            localStorage.removeItem('currentUserRole');\n        }\n    },\n\n    validatePassword: (password) => {\n        const minLength = 8;\n        const hasUpperCase = /[A-Z]/.test(password);\n        const hasLowerCase = /[a-z]/.test(password);\n        const hasNumbers = /\\d/.test(password);\n        const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n        \n        const errors = [];\n        \n        if (password.length < minLength) {\n            errors.push(`Au moins ${minLength} caractères`);\n        }\n        if (!hasUpperCase) {\n            errors.push('Une majuscule');\n        }\n        if (!hasLowerCase) {\n            errors.push('Une minuscule');\n        }\n        if (!hasNumbers) {\n            errors.push('Un chiffre');\n        }\n        if (!hasSpecialChar) {\n            errors.push('Un caractère spécial');\n        }\n        \n        return {\n            isValid: errors.length === 0,\n            errors: errors,\n            strength: errors.length === 0 ? 'Fort' : \n                     errors.length <= 2 ? 'Moyen' : 'Faible'\n        };\n    }\n};\n\nexport default authService;","import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000/api';\n\nconst api = axios.create({\n    baseURL: API_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n    timeout: 10000,\n});\n\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (error.response?.status === 401) {\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            window.location.replace('/login');\n        }\n        return Promise.reject(error);\n    }\n);\n\nconst profileService = {\n    getProfile: async () => {\n        try {\n            const response = await api.get('/user');\n            return response.data;\n        } catch (error) {\n            throw error.response?.data || error.message;\n        }\n    },\n\n    updateProfile: async (userData) => {\n        try {\n            const response = await api.put('/user', userData);\n            return response.data?.user ?? response.data;\n        } catch (error) {\n            throw error.response?.data || error.message;\n        }\n    },\n};\n\nexport default profileService;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { dashboardServices } from '../../../../services/dashboard/dashboardServices';\nimport '../../../../assets/styles/Dashboard.scss';\n\nconst CreateTaskModal = ({ isOpen, onClose, onTaskCreated, projectId, projectUsers, projectTasks, autoAssign = false }) => {\n    const isSubmitting = useRef(false);\n    const [formData, setFormData] = useState({\n        title: '',\n        description: '',\n        priority: 'medium',\n        status: '',\n        skillIds: [],\n        level: 'intermediate',\n        estimatedHours: 1\n    });\n    const [skills, setSkills] = useState([]);\n    const [columns, setColumns] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [showCreateSkill, setShowCreateSkill] = useState(false);\n    const [newSkill, setNewSkill] = useState({\n        name: '',\n        description: ''\n    });\n    const [currentUser, setCurrentUser] = useState(null);\n\n    useEffect(() => {\n        if (isOpen) {\n            fetchData();\n            const user = JSON.parse(localStorage.getItem('user'));\n            setCurrentUser(user);\n        }\n    }, [isOpen, projectId]);\n\n    const fetchData = async () => {\n        try {\n            const [skillsData, columnsData] = await Promise.all([\n                dashboardServices.getAllAvailableProjectSkills(projectId),\n                dashboardServices.getColumns(projectId)\n            ]);\n            \n            setSkills(skillsData.skills || []);\n            setColumns(columnsData.columns || columnsData || []);\n            \n            const columnsArray = columnsData.columns || columnsData || [];\n            if (columnsArray.length > 0) {\n                setFormData(prev => ({ ...prev, status: columnsArray[0].identifier }));\n            }\n        } catch (err) {\n            console.error('Erreur lors du chargement des données:', err);\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        // Protection contre la double soumission\n        if (loading || isSubmitting.current) {\n            return;\n        }\n        \n        isSubmitting.current = true;\n        setLoading(true);\n        setError('');\n\n        try {\n            const projectSkillsData = await dashboardServices.getAllAvailableProjectSkills(projectId);\n            if (!projectSkillsData.hasUsers) {\n                setError('Aucun collaborateur n\\'est ajouté à ce projet. Veuillez d\\'abord ajouter des utilisateurs au projet avant de pouvoir créer des tâches.');\n                setLoading(false);\n                isSubmitting.current = false;\n                return;\n            }\n\n            let assignedUserId = null;\n            if (autoAssign && projectUsers && projectTasks) {\n                const autoAssignedUser = getAutoAssignment(projectTasks, projectUsers, formData.skillIds, formData.estimatedHours);\n                assignedUserId = autoAssignedUser ? autoAssignedUser.id : null;\n            }\n\n            const taskData = {\n                ...formData,\n                projectId: parseInt(projectId),\n                assignedTo: assignedUserId\n            };\n            \n            const response = await dashboardServices.createTask(taskData);\n            \n            if (response.success && response.task) {\n                onTaskCreated(response.task);\n                setFormData({\n                    title: '',\n                    description: '',\n                    priority: 'medium',\n                    status: '',\n                    skillIds: [],\n                    level: 'intermediate',\n                    estimatedHours: 1\n                });\n                onClose();\n            } else {\n                throw new Error('Erreur lors de la création de la tâche');\n            }\n        } catch (err) {\n            setError(err.message);\n        } finally {\n            setLoading(false);\n            isSubmitting.current = false;\n        }\n    };\n\n    const handleCreateSkill = async (e) => {\n        e.preventDefault();\n        if (!newSkill.name) {\n            setError('Le nom de la compétence est requis');\n            return;\n        }\n\n        try {\n            const skillData = {\n                name: newSkill.name,\n                description: newSkill.description\n            };\n            \n            const response = await dashboardServices.createSkill(skillData);\n            const createdSkill = response.skill;\n            setSkills(prev => [...prev, createdSkill]);\n            setFormData(prev => ({\n                ...prev,\n                skillIds: [...prev.skillIds, createdSkill.id]\n            }));\n            \n            setNewSkill({ name: '', description: '' });\n            setShowCreateSkill(false);\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({\n            ...prev,\n            [name]: value\n        }));\n    };\n\n    const handleSkillChange = (skillId) => {\n        setFormData(prev => ({\n            ...prev,\n            skillIds: prev.skillIds.includes(skillId)\n                ? prev.skillIds.filter(id => id !== skillId)\n                : [...prev.skillIds, skillId]\n        }));\n    };\n\n    const handleCreateProjectSkill = async () => {\n        if (!newSkill.name.trim()) {\n            setError('Le nom de la compétence est requis');\n            return;\n        }\n\n        try {\n            const response = await dashboardServices.createProjectSkill(projectId, newSkill);\n            const createdSkill = response.skill;\n            setSkills(prev => [...prev, createdSkill]);\n            setFormData(prev => ({\n                ...prev,\n                skillIds: [...prev.skillIds, createdSkill.id]\n            }));\n            \n            setNewSkill({ name: '', description: '' });\n            setShowCreateSkill(false);\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    const handleDeleteProjectSkill = async (skillId, e) => {\n        e.stopPropagation();  \n        \n        if (!window.confirm('Êtes-vous sûr de vouloir supprimer cette compétence ?')) {\n            return;\n        }\n\n        try { \n            const realSkillId = skillId.replace('project_', '');\n            await dashboardServices.deleteProjectSkill(realSkillId);\n            \n            setSkills(prev => prev.filter(skill => skill.id !== skillId));\n            setFormData(prev => ({\n                ...prev,\n                skillIds: prev.skillIds.filter(id => id !== skillId)\n            }));\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    const canManageSkills = () => {\n        if (!currentUser) return false;\n        return ['responsable_projet', 'manager'].includes(currentUser.role);\n    };\n\n    const canDeleteSkill = (skill) => {\n        if (!currentUser || !skill.createdBy) return false;\n        return skill.type === 'project_skill' && skill.createdBy.id === currentUser.id;\n    };\n\n    const getAutoAssignment = (tasks, users, requiredSkills = [], newTaskHours = 1) => {\n        if (!users || users.length === 0) return null;\n        \n        const collaborators = users.filter(user => \n            user.role === 'collaborateur' || user.role === 'Collaborateur'\n        );\n        \n        if (collaborators.length === 0) return null;\n        \n        const availableCollaborators = collaborators.filter(user => {\n            const currentWorkload = getWorkloadForUser(tasks, user.id);\n            const maxWorkload = user.maxWorkloadHours;\n            return (currentWorkload + newTaskHours) <= maxWorkload;\n        });\n        \n        if (availableCollaborators.length === 0) {\n            return getAssignmentByWorkload(tasks, collaborators);\n        }\n        \n        if (!requiredSkills || requiredSkills.length === 0) {\n            return getAssignmentByWorkload(tasks, availableCollaborators);\n        }\n        \n        let bestMatch = null;\n        let bestScore = -1;\n        \n        availableCollaborators.forEach(user => {\n            const skillScore = calculateSkillMatch(user, requiredSkills);\n            \n            const currentWorkload = getWorkloadForUser(tasks, user.id);\n            const maxWorkload = user.maxWorkloadHours;\n            const workloadPercentage = (currentWorkload + newTaskHours) / maxWorkload;\n            \n            let workloadScore = 0;\n            if (workloadPercentage >= 1.0) {\n                workloadScore = 0.0;\n            } else if (workloadPercentage >= 0.9) {\n                workloadScore = 0.1;\n            } else if (workloadPercentage >= 0.75) {\n                workloadScore = 0.3;\n            } else if (workloadPercentage >= 0.5) {\n                workloadScore = 0.6;\n            } else {\n                workloadScore = 1.0;\n            }\n            \n            const totalScore = (skillScore * 0.6) + (workloadScore * 0.4);\n            \n            if (totalScore > bestScore) {\n                bestScore = totalScore;\n                bestMatch = user;\n            }\n        });\n        \n        return bestMatch || availableCollaborators[0];\n    };\n\n    const calculateSkillMatch = (user, requiredSkills) => {\n        if (!user.skills || !requiredSkills || requiredSkills.length === 0) return 0.5;\n        \n        let matchCount = 0;\n        \n        requiredSkills.forEach(requiredSkillId => {\n            const userSkill = user.skills.find(skill => skill.id === requiredSkillId);\n            if (userSkill) {\n                matchCount++;\n            }\n        });\n        \n        return matchCount / requiredSkills.length;\n    };\n\n    const getWorkloadForUser = (tasks, userId) => {\n        return tasks\n            .filter(task => \n                task.assignedTo && \n                (typeof task.assignedTo === 'object' ? task.assignedTo.id === userId : task.assignedTo === userId)\n            )\n            .reduce((total, task) => total + (task.estimatedHours || 0), 0);\n    };\n\n    const getAssignmentByWorkload = (tasks, collaborators) => {\n        const workload = {};\n        collaborators.forEach(user => {\n            workload[user.id] = getWorkloadForUser(tasks, user.id);\n        });\n        \n        let minWorkload = Infinity;\n        let selectedUser = null;\n        \n        Object.entries(workload).forEach(([userId, count]) => {\n            if (count < minWorkload) {\n                minWorkload = count;\n                selectedUser = collaborators.find(u => u.id == userId);\n            }\n        });\n        \n        return selectedUser || collaborators[0];\n    };\n\n    if (!isOpen) return null;\n\n    return (\n        <div className=\"modal-overlay\">\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h2>Créer une tâche</h2>\n                    <button type=\"button\" className=\"modal-close\" onClick={onClose}>×</button>\n                </div>\n\n                <form onSubmit={handleSubmit} className=\"modal-form\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"title\">Titre *</label>\n                        <input\n                            type=\"text\"\n                            id=\"title\"\n                            name=\"title\"\n                            value={formData.title}\n                            onChange={handleChange}\n                            required\n                            placeholder=\"Titre de la tâche...\"\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"description\">Description</label>\n                        <textarea\n                            id=\"description\"\n                            name=\"description\"\n                            value={formData.description}\n                            onChange={handleChange}\n                            placeholder=\"Description de la tâche...\"\n                            rows=\"3\"\n                        />\n                    </div>\n\n                    <div className=\"form-row\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"priority\">Priorité</label>\n                            <select\n                                id=\"priority\"\n                                name=\"priority\"\n                                value={formData.priority}\n                                onChange={handleChange}\n                            >\n                                <option value=\"low\">Basse</option>\n                                <option value=\"medium\">Moyenne</option>\n                                <option value=\"high\">Haute</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"level\">Niveau requis</label>\n                            <select\n                                id=\"level\"\n                                name=\"level\"\n                                value={formData.level}\n                                onChange={handleChange}\n                            >\n                                <option value=\"beginner\">Débutant</option>\n                                <option value=\"intermediate\">Intermédiaire</option>\n                                <option value=\"advanced\">Avancé</option>\n                                <option value=\"expert\">Expert</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div className=\"form-row\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"estimatedHours\">Heures estimées *</label>\n                            <input\n                                type=\"number\"\n                                id=\"estimatedHours\"\n                                name=\"estimatedHours\"\n                                min=\"0.5\"\n                                max=\"200\"\n                                step=\"0.5\"\n                                value={formData.estimatedHours}\n                                onChange={handleChange}\n                                required\n                                placeholder=\"Ex: 8\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"status\">Statut</label>\n                            <select\n                                id=\"status\"\n                                name=\"status\"\n                                value={formData.status}\n                                onChange={handleChange}\n                                required\n                            >\n                                {Array.isArray(columns) && columns.map(column => (\n                                    <option key={column.id} value={column.identifier}>\n                                        {column.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n\n\n                    <div className=\"form-group\">\n                        <label>Compétences requises</label>\n                        <div className=\"skills-labels-container\">\n                            {Array.isArray(skills) && skills.map(skill => {\n                                const isSelected = formData.skillIds.includes(skill.id);\n                                const canDelete = canDeleteSkill(skill);\n                                \n                                return (\n                                    <div\n                                        key={skill.id}\n                                        className={`skill-label ${isSelected ? 'selected' : ''} ${skill.type === 'project_skill' ? 'project-skill' : 'user-skill'}`}\n                                        onClick={() => handleSkillChange(skill.id)}\n                                    >\n                                        <span className=\"skill-label-name\">{skill.name}</span>\n                                        {skill.type === 'project_skill' && (\n                                            <span className=\"skill-type-badge\">Projet</span>\n                                        )}\n                                        {canDelete && (\n                                            <button\n                                                type=\"button\"\n                                                className=\"skill-delete-btn\"\n                                                onClick={(e) => handleDeleteProjectSkill(skill.id, e)}\n                                                title=\"Supprimer cette compétence\"\n                                            >\n                                                ×\n                                            </button>\n                                        )}\n                                        {isSelected && (\n                                            <span className=\"skill-label-check\">✓</span>\n                                        )}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                        \n                        {canManageSkills() && (\n                            <div className=\"skill-management\">\n                                {!showCreateSkill ? (\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn-add-skill\"\n                                        onClick={() => setShowCreateSkill(true)}\n                                    >\n                                        + Ajouter une compétence au projet\n                                    </button>\n                                ) : (\n                                    <div className=\"create-skill-form\">\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"Nom de la compétence\"\n                                            value={newSkill.name}\n                                            onChange={(e) => setNewSkill(prev => ({ ...prev, name: e.target.value }))}\n                                        />\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"Description (optionnel)\"\n                                            value={newSkill.description}\n                                            onChange={(e) => setNewSkill(prev => ({ ...prev, description: e.target.value }))}\n                                        />\n                                        <div className=\"create-skill-actions\">\n                                            <button\n                                                type=\"button\"\n                                                onClick={handleCreateProjectSkill}\n                                                className=\"btn-save-skill\"\n                                            >\n                                                Ajouter\n                                            </button>\n                                            <button\n                                                type=\"button\"\n                                                onClick={() => {\n                                                    setShowCreateSkill(false);\n                                                    setNewSkill({ name: '', description: '' });\n                                                }}\n                                                className=\"btn-cancel-skill\"\n                                            >\n                                                Annuler\n                                            </button>\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n                        )}\n                        \n                        {formData.skillIds.length === 0 && (\n                            <p className=\"no-skills-selected\">\n                                Aucune compétence sélectionnée. Cliquez sur les étiquettes pour les sélectionner.\n                            </p>\n                        )}\n                        \n                        {formData.skillIds.length > 0 && (\n                            <div className=\"selected-skills-summary\">\n                                <span className=\"selected-count\">\n                                    {formData.skillIds.length} compétence{formData.skillIds.length > 1 ? 's' : ''} sélectionnée{formData.skillIds.length > 1 ? 's' : ''}\n                                </span>\n                            </div>\n                        )}\n                        \n                        <button\n                            type=\"button\"\n                            className=\"btn-add-skill\"\n                            onClick={() => setShowCreateSkill(!showCreateSkill)}\n                        >\n                            {showCreateSkill ? 'Annuler' : '+ Ajouter une compétence'}\n                        </button>\n\n                        {showCreateSkill && (\n                            <div className=\"add-skill-form\">\n                                <h4>Créer une nouvelle compétence</h4>\n                                <div className=\"form-group\">\n                                    <label>Nom *</label>\n                                    <input\n                                        type=\"text\"\n                                        value={newSkill.name}\n                                        onChange={(e) => setNewSkill(prev => ({ ...prev, name: e.target.value }))}\n                                        placeholder=\"Nom de la compétence...\"\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Description</label>\n                                    <textarea\n                                        value={newSkill.description}\n                                        onChange={(e) => setNewSkill(prev => ({ ...prev, description: e.target.value }))}\n                                        placeholder=\"Description de la compétence...\"\n                                        rows=\"2\"\n                                    />\n                                </div>\n\n                                <button\n                                    type=\"button\"\n                                    className=\"btn-primary\"\n                                    onClick={handleCreateSkill}\n                                >\n                                    Créer la compétence\n                                </button>\n                            </div>\n                        )}\n                    </div>\n\n                    {error && <div className=\"error-message\">{error}</div>}\n\n                    <div className=\"modal-actions\">\n                        <button type=\"button\" className=\"btn-secondary\" onClick={onClose}>\n                            Annuler\n                        </button>\n                        <button type=\"submit\" className=\"btn-primary\" disabled={loading}>\n                            {loading ? 'Création...' : 'Créer la tâche'}\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default CreateTaskModal;\n"],"names":["Footer","useNavigate","_jsx","className","children","_jsxs","viewBox","fill","x","y","width","height","rx","stroke","strokeWidth","d","href","API_BASE_URL","apiCall","async","url","options","arguments","length","undefined","token","localStorage","getItem","defaultOptions","headers","_objectSpread","concat","response","fetch","ok","errorData","json","catch","console","error","status","body","Error","message","dashboardServices","getProjects","createProject","method","JSON","stringify","projectData","updateProject","projectId","deleteProject","addUserToProject","email","role","updateUserRole","userId","removeUserFromProject","getTasks","createTask","taskData","updateTask","taskId","deleteTask","uploadTaskImage","imageFile","formData","FormData","append","deleteTaskImage","imagePath","addSkillsToTask","skillIds","assignTaskAutomatically","assignAllProjectTasks","getProjectWorkload","getColumns","createColumn","columnData","updateColumn","columnId","deleteColumn","getSkills","createSkill","skillData","updateSkill","skillId","deleteSkill","getUsers","getAllUsers","getProjectUsers","getProfile","getUserSkills","getUserSkillsByUserId","addUserSkill","updateUserSkill","userSkillId","deleteUserSkill","getProjectUserSkills","getAllAvailableProjectSkills","createProjectSkill","deleteProjectSkill","_ref","task","isOpen","onClose","onTaskUpdate","project","mode","currentUserRole","isEditing","setIsEditing","useState","setFormData","title","description","priority","level","estimatedHours","skills","setSkills","columns","setColumns","newSkill","setNewSkill","name","category","showAddSkill","setShowAddSkill","selectedImage","setSelectedImage","uploading","setUploading","images","setImages","setMessage","currentUser","setCurrentUser","useEffect","requiredSkills","map","skill","id","Array","isArray","fetchSkills","fetchColumns","user","parse","prevOverflow","document","style","overflow","projectSkills","missingSkills","filter","taskSkill","some","projectSkill","err","data","handleChange","e","value","target","prev","parseFloat","uploadImage","file","success","image","path","filename","setTimeout","onClick","stopPropagation","authService","canModifyTasks","onSubmit","preventDefault","trim","alert","htmlFor","type","onChange","placeholder","required","rows","column","identifier","min","max","step","isSelected","includes","canDelete","createdBy","canDeleteSkill","toggleSkill","parseInt","disabled","backgroundColor","getPriorityColor","getPriorityLabel","getLevelLabel","dateString","createdAt","Date","toLocaleDateString","day","month","year","hour","minute","assignedTo","firstname","lastname","index","src","alt","imageIndex","_","deleteImage","accept","event","files","display","Header","isMenuOpen","setIsMenuOpen","isAuthenticated","setIsAuthenticated","canAccessAdmin","setCanAccessAdmin","navigate","location","useLocation","userProfile","profileService","projectsData","hasAdminAccess","canAccessAdminGlobally","projects","checkAuth","pathname","_Fragment","toggleMenu","API_URL","process","REACT_APP_API_URL","api","axios","create","baseURL","timeout","SecurityUtils","parts","split","header","atob","alg","typ","payload","now","Math","floor","exp","clearStorage","removeItem","sessionStorage","clear","cookie","forEach","eqPos","indexOf","substr","userData","_userData$firstname","_userData$lastname","loginRateLimiter","maxRequests","windowMs","requests","Map","key","windowStart","has","set","userRequests","get","time","push","interceptors","request","use","config","Authorization","warn","random","toString","Promise","reject","_error$response","publicPaths","currentPath","window","setItem","replace","_error$response2","register","password","test","sanitizedData","toLowerCase","post","_error$response3","login","credentials","loginData","username","refreshToken","sanitizedUser","_error$response4","logout","hasToken","getToken","newToken","getCurrentUser","userStr","userRole","canManageUsers","canManageProject","isManager","isResponsableProjet","isCollaborateur","getUserRoleInProject","getAdminAccessibleProjects","users","userInProject","find","u","getCurrentUserRole","setCurrentUserRole","validatePassword","hasUpperCase","hasLowerCase","hasNumbers","hasSpecialChar","errors","isValid","strength","updateProfile","_response$data$user","_response$data","put","onTaskCreated","projectUsers","projectTasks","autoAssign","isSubmitting","useRef","loading","setLoading","setError","showCreateSkill","setShowCreateSkill","fetchData","skillsData","columnsData","all","columnsArray","getAutoAssignment","tasks","newTaskHours","collaborators","availableCollaborators","currentWorkload","getWorkloadForUser","maxWorkload","maxWorkloadHours","getAssignmentByWorkload","bestMatch","bestScore","skillScore","calculateSkillMatch","workloadPercentage","workloadScore","totalScore","matchCount","requiredSkillId","reduce","total","workload","minWorkload","Infinity","selectedUser","Object","entries","_ref2","count","current","hasUsers","assignedUserId","autoAssignedUser","handleSkillChange","confirm","realSkillId","handleDeleteProjectSkill","createdSkill"],"sourceRoot":""}