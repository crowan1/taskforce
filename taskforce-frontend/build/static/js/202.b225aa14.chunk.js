"use strict";(self.webpackChunktaskforce_frontend=self.webpackChunktaskforce_frontend||[]).push([[202],{202:(t,c,s)=>{s.d(c,{dashboardServices:()=>n});var o=s(555);const a="http://localhost:8000/api",e=async function(t){let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const s=localStorage.getItem("token"),a={headers:(0,o.A)({Authorization:"Bearer ".concat(s),"Content-Type":"application/json"},c.headers)},e=await fetch(t,(0,o.A)((0,o.A)({},a),c));if(!e.ok){const s=await e.json().catch((()=>({})));console.error("API Error:",{url:t,status:e.status,errorData:s,body:c.body});const o=new Error(s.message||s.error||"HTTP error! status: ".concat(e.status));throw o.status=e.status,o.errorData=s,o}return e.json()},n={getProjects:async()=>e("".concat(a,"/projects")),createProject:async t=>e("".concat(a,"/projects"),{method:"POST",body:JSON.stringify(t)}),updateProject:async(t,c)=>e("".concat(a,"/projects/").concat(t),{method:"PUT",body:JSON.stringify(c)}),deleteProject:async t=>e("".concat(a,"/projects/").concat(t),{method:"DELETE"}),addUserToProject:async function(t,c){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"member";return e("".concat(a,"/projects/").concat(t,"/add-user"),{method:"POST",body:JSON.stringify({email:c,role:s})})},updateUserRole:async(t,c,s)=>e("".concat(a,"/projects/").concat(t,"/update-user-role"),{method:"PUT",body:JSON.stringify({userId:c,role:s})}),removeUserFromProject:async(t,c)=>e("".concat(a,"/projects/").concat(t,"/remove-user"),{method:"DELETE",body:JSON.stringify({userId:c})}),getTasks:async t=>{const c=t?"".concat(a,"/tasks?projectId=").concat(t):"".concat(a,"/tasks");return e(c)},createTask:async t=>e("".concat(a,"/tasks"),{method:"POST",body:JSON.stringify(t)}),updateTask:async(t,c)=>e("".concat(a,"/tasks/").concat(t),{method:"PUT",body:JSON.stringify(c)}),deleteTask:async t=>e("".concat(a,"/tasks/").concat(t),{method:"DELETE"}),uploadTaskImage:async(t,c)=>{const s=localStorage.getItem("token"),o=new FormData;o.append("image",c);const e=await fetch("".concat(a,"/tasks/").concat(t,"/upload-image"),{method:"POST",headers:{Authorization:"Bearer ".concat(s)},body:o});if(!e.ok){const t=await e.json().catch((()=>({})));throw new Error(t.message||"HTTP error! status: ".concat(e.status))}return e.json()},deleteTaskImage:async(t,c)=>e("".concat(a,"/tasks/").concat(t,"/delete-image"),{method:"DELETE",body:JSON.stringify({imagePath:c})}),addSkillsToTask:async(t,c)=>e("".concat(a,"/tasks/").concat(t,"/add-skills"),{method:"POST",body:JSON.stringify({skillIds:c})}),assignTaskAutomatically:async t=>e("".concat(a,"/tasks/").concat(t,"/assign"),{method:"POST"}),assignAllProjectTasks:async t=>e("".concat(a,"/tasks/project/").concat(t,"/assign-all"),{method:"POST"}),getProjectWorkload:async t=>e("".concat(a,"/tasks/project/").concat(t,"/workload")),getColumns:async t=>e("".concat(a,"/columns?projectId=").concat(t)),createColumn:async t=>e("".concat(a,"/columns"),{method:"POST",body:JSON.stringify(t)}),updateColumn:async(t,c)=>e("".concat(a,"/columns/").concat(t),{method:"PUT",body:JSON.stringify(c)}),deleteColumn:async t=>e("".concat(a,"/columns/").concat(t),{method:"DELETE"}),getSkills:async()=>e("".concat(a,"/skills")),createSkill:async t=>e("".concat(a,"/skills"),{method:"POST",body:JSON.stringify(t)}),updateSkill:async(t,c)=>e("".concat(a,"/skills/").concat(t),{method:"PUT",body:JSON.stringify(c)}),deleteSkill:async t=>e("".concat(a,"/skills/").concat(t),{method:"DELETE"}),getUsers:async()=>e("".concat(a,"/users")),getAllUsers:async()=>e("".concat(a,"/users")),getProjectUsers:async t=>e("".concat(a,"/projects/").concat(t,"/users")),getProfile:async()=>e("".concat(a,"/user")),getUserSkills:async()=>e("".concat(a,"/user-skills")),getUserSkillsByUserId:async t=>e("".concat(a,"/users/").concat(t,"/skills")),addUserSkill:async t=>e("".concat(a,"/user-skills"),{method:"POST",body:JSON.stringify(t)}),updateUserSkill:async(t,c)=>e("".concat(a,"/user-skills/").concat(t),{method:"PUT",body:JSON.stringify(c)}),deleteUserSkill:async t=>e("".concat(a,"/user-skills/skill/").concat(t),{method:"DELETE"}),getProjectUserSkills:async t=>e("".concat(a,"/projects/").concat(t,"/skills/users")),getAllAvailableProjectSkills:async t=>e("".concat(a,"/projects/").concat(t,"/skills/available")),createProjectSkill:async(t,c)=>e("".concat(a,"/projects/").concat(t,"/skills"),{method:"POST",body:JSON.stringify(c)}),deleteProjectSkill:async t=>e("".concat(a,"/projects/skills/").concat(t),{method:"DELETE"})}}}]);
//# sourceMappingURL=202.b225aa14.chunk.js.map