{"version":3,"file":"static/js/476.883285be.chunk.js","mappings":"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","sources":["compenents/includes/footer.jsx","pages/Home.jsx","compenents/includes/header.jsx","services/authServices.js","services/profil/profileService.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../assets/styles/compenents/includes/footer.scss';\n\nconst Footer = () => {\n    const navigate = useNavigate();\n\n    return (\n        <footer className=\"footer\">\n            <div className=\"footer-container\">\n                <div className=\"footer-content\">\n                    <div className=\"footer-brand\">\n                        <div className=\"logo\">\n                            <div className=\"logo-icon\">\n                                <svg viewBox=\"0 0 24 24\" fill=\"none\">\n                                    <rect x=\"3\" y=\"5\" width=\"18\" height=\"14\" rx=\"2\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n                                    <path d=\"M7 9h6M7 12h4M7 15h8\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n                                </svg>\n                            </div>\n                            <span>TaskForce</span>\n                        </div>\n                        <p>Répartition intelligente des tâches pour équipes performantes</p>\n                    </div>\n\n                    <div className=\"footer-links\">\n                        <div className=\"footer-section\">\n                            <h4>Produit</h4>\n                            <ul>\n                                <li><a href=\"#\">Fonctionnalités</a></li>\n                                <li><a href=\"#\">Tarifs</a></li>\n                            </ul>\n                        </div>\n\n                        <div className=\"footer-section\">\n                            <h4>Support</h4>\n                            <ul>\n                                <li><a href=\"#\">Aide</a></li>\n                                <li><a href=\"#\">Contact</a></li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"footer-bottom\">\n                    <p>&copy; 2024 TaskForce. Tous droits réservés.</p>\n                    <div className=\"social-links\">\n                        <a href=\"#\" className=\"social-link\">\n                            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                                <path d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"/>\n                            </svg>\n                        </a>\n                        <a href=\"#\" className=\"social-link\">\n                            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                                <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"/>\n                            </svg>\n                        </a>\n                        <a href=\"#\" className=\"social-link\">\n                            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                                <path d=\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.174-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.096.120.112.225.085.345-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.402.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.357-.629-2.754-1.378l-.748 2.853c-.271 1.043-1.002 2.35-1.492 3.146C9.57 23.812 10.763 24.009 12.017 24c6.624 0 11.99-5.367 11.99-11.988C24.007 5.367 18.641.001.001 12.017z\"/>\n                            </svg>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../assets/styles/Home.scss';\nimport Header from \"../compenents/includes/header\";\nimport Footer from \"../compenents/includes/footer\";\n\nconst Home = () => {\n    const navigate = useNavigate();\n\n    return (\n        <div className=\"home-container\">\n            <Header/>\n            <main className=\"main-content\">\n                <div className=\"hero-section\">\n                    <div className=\"hero-text\">\n                        <h1>Organisez, gérez et optimisez vos tâches d'équipe où que vous soyez.</h1>\n                        <p>Découvrez la répartition intelligente des tâches. Libérez votre productivité grâce à TaskForce.</p>\n                    </div>\n\n                    <div className=\"signup-form\">\n                        <input\n                            type=\"email\"\n                            placeholder=\"Adresse e-mail\"\n                            className=\"email-input\"\n                        />\n                        <button\n                            className=\"signup-button\"\n                            onClick={() => navigate('/register')}\n                        >\n                            Inscrivez-vous, c'est gratuit !\n                        </button>\n                        <p className=\"privacy-text\">\n                            En saisissant mon adresse e-mail, j'accepte la{' '}\n                            <a href=\"#\" className=\"privacy-link\">politique de confidentialité de TaskForce</a>\n                        </p>\n                    </div>\n                </div>\n\n                <div className=\"hero-visual\">\n                    <div className=\"phone-mockup\">\n                        <div className=\"phone-screen\">\n                            <div className=\"app-header\">\n                                <span>TaskForce</span>\n                                <div className=\"menu-dots\">⋯</div>\n                            </div>\n                            <div className=\"task-list\">\n                                <div className=\"task-item urgent\">\n                                    <div className=\"task-title\">Analyse des performances Q4</div>\n                                    <div className=\"task-meta\">📊 Marketing • Urgent</div>\n                                </div>\n                                <div className=\"task-item normal\">\n                                    <div className=\"task-title\">Révision du code backend</div>\n                                    <div className=\"task-meta\">💻 Développement</div>\n                                </div>\n                                <div className=\"task-item normal\">\n                                    <div className=\"task-title\">Réunion équipe design</div>\n                                    <div className=\"task-meta\">🎨 Design • Demain 14h</div>\n                                </div>\n                                <div className=\"task-item completed\">\n                                    <div className=\"task-title\">Documentation API</div>\n                                    <div className=\"task-meta\">✅ Terminé</div>\n                                </div>\n                            </div>\n                            <button className=\"add-task\">+ Ajouter une tâche</button>\n                        </div>\n                    </div>\n\n                    <div className=\"floating-icons\">\n                        <div className=\"icon-item icon-1\">📋</div>\n                        <div className=\"icon-item icon-2\">⚡</div>\n                        <div className=\"icon-item icon-3\">🎯</div>\n                        <div className=\"icon-item icon-4\">📊</div>\n                    </div>\n                </div>\n            </main>\n            <Footer/>\n        </div>\n    );\n};\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport authService from \"../../services/authServices\";\nimport profileService from \"../../services/profil/profileService\";\nimport '../../assets/styles/compenents/includes/header.scss';\n\nconst Header = () => {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [canAccessAdmin, setCanAccessAdmin] = useState(false);\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    useEffect(() => {\n        const checkAuth = async () => {\n            try {\n                const isAuth = await authService.isAuthenticated();\n                if (isAuth) {\n                    const userProfile = await profileService.getProfile();\n                    setIsAuthenticated(true);\n                     \n                    try {\n                        const { dashboardServices } = await import('../../services/dashboard/dashboardServices');\n                        const projectsData = await dashboardServices.getProjects();\n                        const hasAdminAccess = authService.canAccessAdminGlobally(projectsData.projects, userProfile.id);\n                        setCanAccessAdmin(hasAdminAccess);\n                    } catch (error) {\n                        console.error('Erreur lors de la vérification des permissions admin:', error);\n                        setCanAccessAdmin(false);\n                    }\n                } else {\n                    setIsAuthenticated(false);\n                    setCanAccessAdmin(false);\n                }\n            } catch (error) {\n                setIsAuthenticated(false);\n                setCanAccessAdmin(false);\n            }\n        };\n\n        checkAuth();\n    }, [location.pathname]);\n\n    useEffect(() => {\n        setIsMenuOpen(false);\n    }, [location.pathname]);\n\n\n    const toggleMenu = () => {\n        setIsMenuOpen(!isMenuOpen);\n    };\n\n    const handleLogout = () => {\n        authService.logout();\n        setIsAuthenticated(false);\n        navigate('/');\n    };\n\n    return (\n        <header className=\"header\">\n            <div className=\"header-container\">\n                <div className=\"header-left\">\n                    <div className=\"logo\" onClick={() => navigate('/')}>\n                        <div className=\"logo-icon\">\n                            <svg viewBox=\"0 0 24 24\" fill=\"none\">\n                                <rect x=\"3\" y=\"5\" width=\"18\" height=\"14\" rx=\"2\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n                                <path d=\"M7 9h6M7 12h4M7 15h8\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n                            </svg>\n                        </div>\n                        <span className=\"logo-text\">TaskForce</span>\n                    </div>\n\n                    <nav className={`nav-links ${isMenuOpen ? 'mobile-open' : ''}`}>\n                        <button className=\"nav-link\">Fonctionnalités</button>\n                        {isAuthenticated && (\n                            <>\n                                <button className=\"nav-link\" onClick={() => navigate('/dashboard')}>\n                                    Mes Tableaux\n                                </button>\n                                {canAccessAdmin && (\n                                    <button className=\"nav-link\" onClick={() => navigate('/admin')}>\n                                        Admin\n                                    </button>\n                                )}\n                                <button className=\"nav-link\" onClick={() => navigate('/my-account')}>\n                                    Mon Compte\n                                </button>\n                            </>\n                        )}\n                    </nav>\n                </div>\n\n                <div className=\"header-right\">\n                    {isAuthenticated ? (\n                        <>\n                            <button className=\"btn-login\" onClick={() => navigate('/dashboard')}>\n                                Mes Tableaux\n                            </button>\n                            {canAccessAdmin && (\n                                <button className=\"btn-admin\" onClick={() => navigate('/admin')}>\n                                    Admin\n                                </button>\n                            )}\n                            <button className=\"btn-signup\" onClick={() => navigate('/account')}>\n                                Mon Compte\n                            </button>\n                        </>\n                    ) : (\n                        <>\n                            <button className=\"btn-login\" onClick={() => navigate('/login')}>\n                                Connexion\n                            </button>\n                            <button className=\"btn-signup\" onClick={() => navigate('/register')}>\n                                Créer un compte\n                            </button>\n                        </>\n                    )}\n\n                    <button \n                        className=\"mobile-menu-toggle\" \n                        onClick={toggleMenu}\n                        aria-label=\"Toggle mobile menu\"\n                        aria-expanded={isMenuOpen}\n                    >\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </button>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\nconst api = axios.create({\n    baseURL: API_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n    timeout: 10000,\n});\nconst SecurityUtils = {\n    isValidJWT: (token) => {\n        if (!token || typeof token !== 'string') return false;\n        \n        try {\n            const parts = token.split('.');\n            if (parts.length !== 3) return false;\n            \n            const header = JSON.parse(atob(parts[0]));\n            if (!header.alg || !header.typ) return false;\n            \n            const payload = JSON.parse(atob(parts[1]));\n            const now = Math.floor(Date.now() / 1000);\n            \n            return payload.exp && payload.exp > now;\n        } catch (error) {\n            console.error('Token validation error:', error);\n            return false;\n        }\n    },\n\n    clearStorage: () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        localStorage.removeItem('refreshToken');\n        sessionStorage.clear();\n        \n        document.cookie.split(\";\").forEach(cookie => {\n            const eqPos = cookie.indexOf(\"=\");\n            const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n            document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/`;\n        });\n    },\n\n    sanitizeUserData: (userData) => {\n        if (!userData || typeof userData !== 'object') return null;\n        \n        return {\n            id: userData.id,\n            email: userData.email,\n            firstname: userData.firstname?.trim(),\n            lastname: userData.lastname?.trim(),\n            role: userData.role,\n        };\n    },\n\n    createRateLimiter: (maxRequests = 5, windowMs = 600000) => {\n        const requests = new Map();\n        \n        return (key) => {\n            const now = Date.now();\n            const windowStart = now - windowMs;\n            \n            if (!requests.has(key)) {\n                requests.set(key, []);\n            }\n            \n            const userRequests = requests.get(key).filter(time => time > windowStart);\n            \n            if (userRequests.length >= maxRequests) {\n                throw new Error('Trop de tentatives, veuillez patienter');\n            }\n            \n            userRequests.push(now);\n            requests.set(key, userRequests);\n        };\n    }\n};\n\nconst loginRateLimiter = SecurityUtils.createRateLimiter(5, 300000);\n\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        \n        if (token) {\n            if (SecurityUtils.isValidJWT(token)) {\n                config.headers.Authorization = `Bearer ${token}`;\n            } else {\n                console.warn('Token invalide détecté, nettoyage...');\n                SecurityUtils.clearStorage();\n            }\n        }\n        \n        config.headers['X-Request-ID'] = `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n        \n        return config;\n    },\n    (error) => {\n        console.error('Erreur intercepteur requête:', error);\n        return Promise.reject(error);\n    }\n);\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        const status = error.response?.status;\n        const config = error.config;\n        \n        switch (status) {\n            case 401:\n                console.warn('Token expiré ou invalide');\n                SecurityUtils.clearStorage();\n                 \n                const publicPaths = ['/login', '/register', '/', '/home'];\n                const currentPath = window.location.pathname;\n                \n                if (!publicPaths.some(path => currentPath.includes(path))) {\n                    sessionStorage.setItem('returnUrl', currentPath);\n                    window.location.replace('/login');\n                }\n                break;\n                \n            case 403:\n                console.error('Accès refusé:', error.response.data);\n                break;\n                \n            case 429:\n                console.warn('Rate limit atteint');\n                break;\n                \n            case 422:\n                console.error('Données invalides:', error.response.data);\n                break;\n                \n            default:\n                if (status >= 500) {\n                    console.error('Erreur serveur:', error.response?.data);\n                }\n        }\n        \n        return Promise.reject(error);\n    }\n);\nconst authService = {\n    register: async (userData) => {\n        try {\n            if (!userData.email || !userData.password || !userData.firstname || !userData.lastname) {\n                throw new Error('Tous les champs sont requis');\n            }\n            \n            if (userData.password.length < 8) {\n                throw new Error('Le mot de passe doit contenir au moins 8 caractères');\n            }\n            \n            if (!/[A-Z]/.test(userData.password)) {\n                throw new Error('Le mot de passe doit contenir au moins une majuscule');\n            }\n            \n            if (!/[0-9]/.test(userData.password)) {\n                throw new Error('Le mot de passe doit contenir au moins un chiffre');\n            }\n            \n            const sanitizedData = {\n                email: userData.email.trim().toLowerCase(),\n                password: userData.password,\n                firstname: userData.firstname.trim(),\n                lastname: userData.lastname.trim()\n            };\n            \n            const response = await api.post('/register', sanitizedData);\n            return response.data;\n        } catch (error) {\n            console.error('Erreur inscription:', error);\n            throw error.response?.data || { message: error.message };\n        }\n    },\n\n    login: async (credentials) => {\n        try {\n            if (!credentials.email || !credentials.password) {\n                throw new Error('Email et mot de passe requis');\n            }\n            \n            loginRateLimiter(credentials.email);\n            \n            const loginData = {\n                username: credentials.email.trim().toLowerCase(),\n                password: credentials.password\n            };\n            \n            const response = await api.post('/login', loginData);\n            const { token, user, refreshToken } = response.data;\n            \n            if (!token || !SecurityUtils.isValidJWT(token)) {\n                throw new Error('Token invalide reçu du serveur');\n            }\n            \n            localStorage.setItem('token', token);\n            \n            if (refreshToken && SecurityUtils.isValidJWT(refreshToken)) {\n                localStorage.setItem('refreshToken', refreshToken);\n            }\n            \n            if (user) {\n                const sanitizedUser = SecurityUtils.sanitizeUserData(user);\n                if (sanitizedUser) {\n                    localStorage.setItem('user', JSON.stringify(sanitizedUser));\n                }\n            }\n            \n            return response.data;\n        } catch (error) {\n            console.error('Erreur connexion:', error);\n            throw error.response?.data || { message: error.message };\n        }\n    },\n\n    logout: async () => {\n        try {\n            const token = localStorage.getItem('token');\n            \n            if (token && SecurityUtils.isValidJWT(token)) {\n                await api.post('/logout');\n            }\n        } catch (error) {\n            console.error('Erreur lors de la déconnexion serveur:', error);\n        } finally {\n            SecurityUtils.clearStorage();\n            window.location.replace('/login');\n        }\n    },\n\n    hasToken: () => {\n        const token = localStorage.getItem('token');\n        return token && SecurityUtils.isValidJWT(token);\n    },\n\n    isAuthenticated: async () => {\n        const token = localStorage.getItem('token');\n        \n        if (!token || !SecurityUtils.isValidJWT(token)) {\n            SecurityUtils.clearStorage();\n            return false;\n        }\n\n        try {\n            const response = await api.get('/user');\n            \n            if (response.data && response.data.id) {\n                return true;\n            } else {\n                throw new Error('Réponse utilisateur invalide');\n            }\n        } catch (error) {\n            console.warn('Vérification authentification échouée:', error.message);\n            SecurityUtils.clearStorage();\n            return false;\n        }\n    },\n\n    getToken: () => {\n        const token = localStorage.getItem('token');\n        return SecurityUtils.isValidJWT(token) ? token : null;\n    },\n\n    refreshToken: async () => {\n        try {\n            const refreshToken = localStorage.getItem('refreshToken');\n            \n            if (!refreshToken || !SecurityUtils.isValidJWT(refreshToken)) {\n                throw new Error('Refresh token invalide');\n            }\n            \n            const response = await api.post('/refresh-token', { refreshToken });\n            const { token: newToken } = response.data;\n            \n            if (!SecurityUtils.isValidJWT(newToken)) {\n                throw new Error('Nouveau token invalide');\n            }\n            \n            localStorage.setItem('token', newToken);\n            return newToken;\n        } catch (error) {\n            console.error('Erreur refresh token:', error);\n            SecurityUtils.clearStorage();\n            throw error;\n        }\n    },\n\n    getCurrentUser: () => {\n        try {\n            const userStr = localStorage.getItem('user');\n            if (!userStr) return null;\n            \n            const user = JSON.parse(userStr);\n            return SecurityUtils.sanitizeUserData(user);\n        } catch (error) {\n            console.error('Erreur parsing utilisateur:', error);\n            localStorage.removeItem('user');\n            return null;\n        }\n    },\n\n    canAccessAdmin: (userRole) => {\n        return userRole && (userRole === 'manager' || userRole === 'responsable_projet');\n    },\n\n    canModifyTasks: (userRole) => {\n        return userRole === 'responsable_projet';\n    },\n\n    canManageUsers: (userRole) => {\n        return userRole === 'responsable_projet';\n    },\n\n    canManageProject: (userRole) => {\n        return userRole === 'responsable_projet';\n    },\n\n    isManager: (userRole) => {\n        return userRole === 'manager';\n    },\n\n    isResponsableProjet: (userRole) => {\n        return userRole === 'responsable_projet';\n    },\n\n    isCollaborateur: (userRole) => {\n        return userRole === 'collaborateur';\n    },\n\n    canAccessAdminGlobally: (projects, userId) => {\n        if (!projects || !Array.isArray(projects) || !userId) return false;\n        \n        return projects.some(project => {\n            const userRole = authService.getUserRoleInProject(project, userId);\n            return userRole === 'manager' || userRole === 'responsable_projet';\n        });\n    },\n\n    getAdminAccessibleProjects: (projects, userId) => {\n        if (!projects || !Array.isArray(projects) || !userId) return [];\n        \n        return projects.filter(project => {\n            const userRole = authService.getUserRoleInProject(project, userId);\n            return userRole === 'manager' || userRole === 'responsable_projet';\n        });\n    },\n\n    getUserRoleInProject: (project, userId) => {\n        if (!project || !project.users || !userId) return null;\n        const userInProject = project.users.find(u => u.id === userId);\n        return userInProject?.role || null;\n    },\n\n    getCurrentUserRole: () => {\n        return localStorage.getItem('currentUserRole');\n    },\n\n    setCurrentUserRole: (role) => {\n        if (role) {\n            localStorage.setItem('currentUserRole', role);\n        } else {\n            localStorage.removeItem('currentUserRole');\n        }\n    },\n\n    validatePassword: (password) => {\n        const minLength = 8;\n        const hasUpperCase = /[A-Z]/.test(password);\n        const hasLowerCase = /[a-z]/.test(password);\n        const hasNumbers = /\\d/.test(password);\n        const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n        \n        const errors = [];\n        \n        if (password.length < minLength) {\n            errors.push(`Au moins ${minLength} caractères`);\n        }\n        if (!hasUpperCase) {\n            errors.push('Une majuscule');\n        }\n        if (!hasLowerCase) {\n            errors.push('Une minuscule');\n        }\n        if (!hasNumbers) {\n            errors.push('Un chiffre');\n        }\n        if (!hasSpecialChar) {\n            errors.push('Un caractère spécial');\n        }\n        \n        return {\n            isValid: errors.length === 0,\n            errors: errors,\n            strength: errors.length === 0 ? 'Fort' : \n                     errors.length <= 2 ? 'Moyen' : 'Faible'\n        };\n    }\n};\n\nexport default authService;","import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000/api';\n\nconst api = axios.create({\n    baseURL: API_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n    timeout: 10000,\n});\n\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (error.response?.status === 401) {\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            window.location.replace('/login');\n        }\n        return Promise.reject(error);\n    }\n);\n\nconst profileService = {\n    getProfile: async () => {\n        try {\n            const response = await api.get('/user');\n            return response.data;\n        } catch (error) {\n            throw error.response?.data || error.message;\n        }\n    },\n\n    updateProfile: async (userData) => {\n        try {\n            const response = await api.put('/user', userData);\n            return response.data?.user ?? response.data;\n        } catch (error) {\n            throw error.response?.data || error.message;\n        }\n    },\n};\n\nexport default profileService;\n"],"names":["Footer","useNavigate","_jsx","className","children","_jsxs","viewBox","fill","x","y","width","height","rx","stroke","strokeWidth","d","href","Home","navigate","Header","type","placeholder","onClick","isMenuOpen","setIsMenuOpen","useState","isAuthenticated","setIsAuthenticated","canAccessAdmin","setCanAccessAdmin","location","useLocation","useEffect","async","authService","userProfile","profileService","getProfile","dashboardServices","projectsData","getProjects","hasAdminAccess","canAccessAdminGlobally","projects","id","error","console","checkAuth","pathname","concat","_Fragment","toggleMenu","API_URL","process","REACT_APP_API_URL","api","axios","create","baseURL","headers","timeout","SecurityUtils","token","parts","split","length","header","JSON","parse","atob","alg","typ","payload","now","Math","floor","Date","exp","clearStorage","localStorage","removeItem","sessionStorage","clear","document","cookie","forEach","eqPos","indexOf","name","substr","userData","_userData$firstname","_userData$lastname","email","firstname","trim","lastname","role","loginRateLimiter","maxRequests","arguments","undefined","windowMs","requests","Map","key","windowStart","has","set","userRequests","get","filter","time","Error","push","interceptors","request","use","config","getItem","Authorization","warn","random","toString","Promise","reject","response","_error$response","status","publicPaths","currentPath","window","some","path","includes","setItem","replace","data","_error$response2","register","password","test","sanitizedData","toLowerCase","post","_error$response3","message","login","credentials","loginData","username","user","refreshToken","sanitizedUser","stringify","_error$response4","logout","hasToken","getToken","newToken","getCurrentUser","userStr","userRole","canModifyTasks","canManageUsers","canManageProject","isManager","isResponsableProjet","isCollaborateur","userId","Array","isArray","project","getUserRoleInProject","getAdminAccessibleProjects","users","userInProject","find","u","getCurrentUserRole","setCurrentUserRole","validatePassword","hasUpperCase","hasLowerCase","hasNumbers","hasSpecialChar","errors","isValid","strength","updateProfile","_response$data$user","_response$data","put"],"sourceRoot":""}