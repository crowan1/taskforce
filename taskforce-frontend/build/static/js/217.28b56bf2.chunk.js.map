{"version":3,"file":"static/js/217.28b56bf2.chunk.js","mappings":"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","sources":["compenents/includes/footer.jsx","pages/Register.jsx","compenents/includes/header.jsx","services/authServices.js","services/profil/profileService.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../assets/styles/compenents/includes/footer.scss';\n\nconst Footer = () => {\n    const navigate = useNavigate();\n\n    return (\n        <footer className=\"footer\">\n            <div className=\"footer-container\">\n                <div className=\"footer-content\">\n                    <div className=\"footer-brand\">\n                        <div className=\"logo\">\n                            <div className=\"logo-icon\">\n                                <svg viewBox=\"0 0 24 24\" fill=\"none\">\n                                    <rect x=\"3\" y=\"5\" width=\"18\" height=\"14\" rx=\"2\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n                                    <path d=\"M7 9h6M7 12h4M7 15h8\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n                                </svg>\n                            </div>\n                            <span>TaskForce</span>\n                        </div>\n                        <p>Répartition intelligente des tâches pour équipes performantes</p>\n                    </div>\n\n                    <div className=\"footer-links\">\n                        <div className=\"footer-section\">\n                            <h4>Produit</h4>\n                            <ul>\n                                <li><a href=\"#\">Fonctionnalités</a></li>\n                                <li><a href=\"#\">Tarifs</a></li>\n                            </ul>\n                        </div>\n\n                        <div className=\"footer-section\">\n                            <h4>Support</h4>\n                            <ul>\n                                <li><a href=\"#\">Aide</a></li>\n                                <li><a href=\"#\">Contact</a></li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"footer-bottom\">\n                    <p>&copy; 2024 TaskForce. Tous droits réservés.</p>\n                    <div className=\"social-links\">\n                        <a href=\"#\" className=\"social-link\">\n                            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                                <path d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"/>\n                            </svg>\n                        </a>\n                        <a href=\"#\" className=\"social-link\">\n                            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                                <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"/>\n                            </svg>\n                        </a>\n                        <a href=\"#\" className=\"social-link\">\n                            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                                <path d=\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.174-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.096.120.112.225.085.345-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.402.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.357-.629-2.754-1.378l-.748 2.853c-.271 1.043-1.002 2.35-1.492 3.146C9.57 23.812 10.763 24.009 12.017 24c6.624 0 11.99-5.367 11.99-11.988C24.007 5.367 18.641.001.001 12.017z\"/>\n                            </svg>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;","import React, { useState } from 'react';\nimport '../assets/styles/Register.scss';\nimport { useNavigate } from 'react-router-dom';\nimport authService from \"../services/authServices\";\nimport Header from \"../compenents/includes/header\";\nimport Footer from \"../compenents/includes/footer\";\n\nconst Register = () => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '',\n        firstname: '',\n        lastname: ''\n    });\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [passwordValidation, setPasswordValidation] = useState({\n        length: false,\n        uppercase: false,\n        number: false\n    });\n\n    const navigate = useNavigate();\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value\n        });\n \n        if (name === 'password') {\n            const validation = {\n                length: value.length >= 8,\n                uppercase: /[A-Z]/.test(value),\n                number: /[0-9]/.test(value)\n            };\n            \n            setPasswordValidation(validation);\n            \n            if (value.length > 0) {\n                const errors = [];\n                if (!validation.length) errors.push('8 caractères minimum');\n                if (!validation.uppercase) errors.push('une majuscule');\n                if (!validation.number) errors.push('un chiffre');\n                \n                if (errors.length > 0) {\n                    setPasswordError(`Le mot de passe doit contenir : ${errors.join(', ')}`);\n                } else {\n                    setPasswordError('');\n                }\n            } else {\n                setPasswordError('');\n            }\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        setError('');\n        setSuccess('');\n        setPasswordError('');\n \n        const hasUppercase = /[A-Z]/.test(formData.password);\n        const hasNumber = /[0-9]/.test(formData.password);\n        const hasMinLength = formData.password.length >= 8;\n        \n        if (!hasMinLength || !hasUppercase || !hasNumber) {\n            const errors = [];\n            if (!hasMinLength) errors.push('8 caractères minimum');\n            if (!hasUppercase) errors.push('une majuscule');\n            if (!hasNumber) errors.push('un chiffre');\n            \n            setPasswordError(`Le mot de passe doit contenir : ${errors.join(', ')}`);\n            setLoading(false);\n            return;\n        }\n\n        try {\n            await authService.register(formData);\n            setSuccess('Inscription réussie ! Redirection vers la page de connexion...');\n            setFormData({\n                email: '',\n                password: '',\n                firstname: '',\n                lastname: ''\n            });\n             \n            setTimeout(() => {\n                navigate(\"/login\");\n            }, 2000);\n        } catch (error) {\n            console.error('Erreur inscription:', error);\n             \n            if (error.message && error.message.includes('mot de passe')) {\n                setPasswordError(error.message);\n            } else if (error.message) {\n                setError(error.message);\n            } else {\n                setError('Erreur lors de l\\'inscription. Veuillez réessayer.');\n            }\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"register-page\">\n            <Header />\n            <div className=\"register-container\">\n            <div className=\"welcome-section\">\n                <div className=\"decorative-elements\">\n                    <div className=\"circle-1\"></div>\n                    <div className=\"circle-2\"></div>\n                    <div className=\"dot-1\"></div>\n                    <div className=\"dot-2\"></div>\n                    <div className=\"dot-3\"></div>\n\n                    <svg className=\"organic-shape-1\" viewBox=\"0 0 100 100\">\n                        <path d=\"M20,30 Q40,10 60,30 Q80,50 60,70 Q40,90 20,70 Q0,50 20,30 Z\" fill=\"currentColor\"/>\n                    </svg>\n                    <svg className=\"organic-shape-2\" viewBox=\"0 0 100 100\">\n                        <path d=\"M30,20 Q50,0 70,20 Q90,40 70,60 Q50,80 30,60 Q10,40 30,20 Z\" fill=\"currentColor\"/>\n                    </svg>\n                </div>\n\n                <div className=\"welcome-content\">\n                    <h1>Rejoignez TaskForce !</h1>\n                    <p>\n                        Créez votre compte et commencez à organiser vos projets\n                        de manière efficace avec notre plateforme de gestion de tâches.\n                    </p>\n                </div>\n            </div>\n\n            <div className=\"form-section\">\n                <div className=\"form-container\">\n                    <div className=\"form-header\">\n                        <h2>Créer un compte</h2>\n                        <p>Remplissez vos informations pour commencer</p>\n                    </div>\n\n                    {error && (\n                        <div className=\"alert error\">\n                            {error}\n                            <button\n                                type=\"button\"\n                                onClick={() => setError('')}\n                                style={{\n                                    float: 'right',\n                                    background: 'none',\n                                    border: 'none',\n                                    color: '#991b1b',\n                                    cursor: 'pointer'\n                                }}\n                            >\n                                ×\n                            </button>\n                        </div>\n                    )}\n\n                    {success && (\n                        <div className=\"alert success\">\n                            {success}\n                        </div>\n                    )}\n\n                    <form onSubmit={handleSubmit} className=\"register-form\">\n                        <div className=\"form-row\">\n                            <div className=\"form-group\">\n                                <label>Prénom</label>\n                                <div className=\"input-wrapper\">\n                                    <input\n                                        type=\"text\"\n                                        name=\"firstname\"\n                                        value={formData.firstname}\n                                        onChange={handleChange}\n                                        placeholder=\"Votre prénom\"\n                                        required\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Nom</label>\n                                <div className=\"input-wrapper\">\n                                    <input\n                                        type=\"text\"\n                                        name=\"lastname\"\n                                        value={formData.lastname}\n                                        onChange={handleChange}\n                                        placeholder=\"Votre nom\"\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Adresse email</label>\n                            <div className=\"input-wrapper\">\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    value={formData.email}\n                                    onChange={handleChange}\n                                    placeholder=\"votre@email.com\"\n                                    required\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Mot de passe</label>\n                            <div className=\"input-wrapper\">\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={formData.password}\n                                    onChange={handleChange}\n                                    placeholder=\"Créez un mot de passe sécurisé\"\n                                    required\n                                    className={passwordError ? 'error' : ''}\n                                />\n                            </div>\n                            {passwordError && (\n                                <div className=\"field-error\">\n                                    {passwordError}\n                                </div>\n                            )}\n                            \n                            {formData.password.length > 0 && (\n                                <div className=\"password-requirements\">\n                                    <div className={`requirement ${passwordValidation.length ? 'valid' : 'invalid'}`}>\n                                        {passwordValidation.length ? '✓' : '✗'} 8 caractères minimum\n                                    </div>\n                                    <div className={`requirement ${passwordValidation.uppercase ? 'valid' : 'invalid'}`}>\n                                        {passwordValidation.uppercase ? '✓' : '✗'} Une majuscule\n                                    </div>\n                                    <div className={`requirement ${passwordValidation.number ? 'valid' : 'invalid'}`}>\n                                        {passwordValidation.number ? '✓' : '✗'} Un chiffre\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n\n                        <button\n                            type=\"submit\"\n                            className=\"submit-button\"\n                            disabled={loading}\n                        >\n                            {loading ? (\n                                <div className=\"loading-content\">\n                                    <svg className=\"spinner\" viewBox=\"0 0 24 24\">\n                                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                                    </svg>\n                                    Création du compte...\n                                </div>\n                            ) : (\n                                <div>\n                                    Créer mon compte\n                                </div>\n                            )}\n                        </button>\n\n                        <div className=\"login-link\">\n                            Déjà un compte ?{' '}\n                            <span\n                                className=\"link\"\n                                onClick={() => navigate('/login')}\n                            >\n                                Se connecter\n                            </span>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <Footer />\n        </div>\n    \n    );\n};\n\nexport default Register;","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport authService from \"../../services/authServices\";\nimport profileService from \"../../services/profil/profileService\";\nimport '../../assets/styles/compenents/includes/header.scss';\n\nconst Header = () => {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [canAccessAdmin, setCanAccessAdmin] = useState(false);\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    useEffect(() => {\n        const checkAuth = async () => {\n            try {\n                const isAuth = await authService.isAuthenticated();\n                if (isAuth) {\n                    const userProfile = await profileService.getProfile();\n                    setIsAuthenticated(true);\n                     \n                    try {\n                        const { dashboardServices } = await import('../../services/dashboard/dashboardServices');\n                        const projectsData = await dashboardServices.getProjects();\n                        const hasAdminAccess = authService.canAccessAdminGlobally(projectsData.projects, userProfile.id);\n                        setCanAccessAdmin(hasAdminAccess);\n                    } catch (error) {\n                        console.error('Erreur lors de la vérification des permissions admin:', error);\n                        setCanAccessAdmin(false);\n                    }\n                } else {\n                    setIsAuthenticated(false);\n                    setCanAccessAdmin(false);\n                }\n            } catch (error) {\n                setIsAuthenticated(false);\n                setCanAccessAdmin(false);\n            }\n        };\n\n        checkAuth();\n    }, [location.pathname]);\n\n    useEffect(() => {\n        setIsMenuOpen(false);\n    }, [location.pathname]);\n\n\n    const toggleMenu = () => {\n        setIsMenuOpen(!isMenuOpen);\n    };\n\n    const handleLogout = () => {\n        authService.logout();\n        setIsAuthenticated(false);\n        navigate('/');\n    };\n\n    return (\n        <header className=\"header\">\n            <div className=\"header-container\">\n                <div className=\"header-left\">\n                    <div className=\"logo\" onClick={() => navigate('/')}>\n                        <div className=\"logo-icon\">\n                            <svg viewBox=\"0 0 24 24\" fill=\"none\">\n                                <rect x=\"3\" y=\"5\" width=\"18\" height=\"14\" rx=\"2\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n                                <path d=\"M7 9h6M7 12h4M7 15h8\" stroke=\"currentColor\" strokeWidth=\"2\"/>\n                            </svg>\n                        </div>\n                        <span className=\"logo-text\">TaskForce</span>\n                    </div>\n\n                    <nav className={`nav-links ${isMenuOpen ? 'mobile-open' : ''}`}>\n                        <button className=\"nav-link\">Fonctionnalités</button>\n                        {isAuthenticated && (\n                            <>\n                                <button className=\"nav-link\" onClick={() => navigate('/dashboard')}>\n                                    Mes Tableaux\n                                </button>\n                                {canAccessAdmin && (\n                                    <button className=\"nav-link\" onClick={() => navigate('/admin')}>\n                                        Admin\n                                    </button>\n                                )}\n                                <button className=\"nav-link\" onClick={() => navigate('/my-account')}>\n                                    Mon Compte\n                                </button>\n                            </>\n                        )}\n                    </nav>\n                </div>\n\n                <div className=\"header-right\">\n                    {isAuthenticated ? (\n                        <>\n                            <button className=\"btn-login\" onClick={() => navigate('/dashboard')}>\n                                Mes Tableaux\n                            </button>\n                            {canAccessAdmin && (\n                                <button className=\"btn-admin\" onClick={() => navigate('/admin')}>\n                                    Admin\n                                </button>\n                            )}\n                            <button className=\"btn-signup\" onClick={() => navigate('/account')}>\n                                Mon Compte\n                            </button>\n                        </>\n                    ) : (\n                        <>\n                            <button className=\"btn-login\" onClick={() => navigate('/login')}>\n                                Connexion\n                            </button>\n                            <button className=\"btn-signup\" onClick={() => navigate('/register')}>\n                                Créer un compte\n                            </button>\n                        </>\n                    )}\n\n                    <button \n                        className=\"mobile-menu-toggle\" \n                        onClick={toggleMenu}\n                        aria-label=\"Toggle mobile menu\"\n                        aria-expanded={isMenuOpen}\n                    >\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </button>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\nconst api = axios.create({\n    baseURL: API_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n    timeout: 10000,\n});\nconst SecurityUtils = {\n    isValidJWT: (token) => {\n        if (!token || typeof token !== 'string') return false;\n        \n        try {\n            const parts = token.split('.');\n            if (parts.length !== 3) return false;\n            \n            const header = JSON.parse(atob(parts[0]));\n            if (!header.alg || !header.typ) return false;\n            \n            const payload = JSON.parse(atob(parts[1]));\n            const now = Math.floor(Date.now() / 1000);\n            \n            return payload.exp && payload.exp > now;\n        } catch (error) {\n            console.error('Token validation error:', error);\n            return false;\n        }\n    },\n\n    clearStorage: () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        localStorage.removeItem('refreshToken');\n        sessionStorage.clear();\n        \n        document.cookie.split(\";\").forEach(cookie => {\n            const eqPos = cookie.indexOf(\"=\");\n            const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n            document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/`;\n        });\n    },\n\n    sanitizeUserData: (userData) => {\n        if (!userData || typeof userData !== 'object') return null;\n        \n        return {\n            id: userData.id,\n            email: userData.email,\n            firstname: userData.firstname?.trim(),\n            lastname: userData.lastname?.trim(),\n            role: userData.role,\n        };\n    },\n\n    createRateLimiter: (maxRequests = 5, windowMs = 600000) => {\n        const requests = new Map();\n        \n        return (key) => {\n            const now = Date.now();\n            const windowStart = now - windowMs;\n            \n            if (!requests.has(key)) {\n                requests.set(key, []);\n            }\n            \n            const userRequests = requests.get(key).filter(time => time > windowStart);\n            \n            if (userRequests.length >= maxRequests) {\n                throw new Error('Trop de tentatives, veuillez patienter');\n            }\n            \n            userRequests.push(now);\n            requests.set(key, userRequests);\n        };\n    }\n};\n\nconst loginRateLimiter = SecurityUtils.createRateLimiter(5, 300000);\n\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        \n        if (token) {\n            if (SecurityUtils.isValidJWT(token)) {\n                config.headers.Authorization = `Bearer ${token}`;\n            } else {\n                console.warn('Token invalide détecté, nettoyage...');\n                SecurityUtils.clearStorage();\n            }\n        }\n        \n        config.headers['X-Request-ID'] = `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n        \n        return config;\n    },\n    (error) => {\n        console.error('Erreur intercepteur requête:', error);\n        return Promise.reject(error);\n    }\n);\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        const status = error.response?.status;\n        const config = error.config;\n        \n        switch (status) {\n            case 401:\n                console.warn('Token expiré ou invalide');\n                SecurityUtils.clearStorage();\n                 \n                const publicPaths = ['/login', '/register', '/', '/home'];\n                const currentPath = window.location.pathname;\n                \n                if (!publicPaths.some(path => currentPath.includes(path))) {\n                    sessionStorage.setItem('returnUrl', currentPath);\n                    window.location.replace('/login');\n                }\n                break;\n                \n            case 403:\n                console.error('Accès refusé:', error.response.data);\n                break;\n                \n            case 429:\n                console.warn('Rate limit atteint');\n                break;\n                \n            case 422:\n                console.error('Données invalides:', error.response.data);\n                break;\n                \n            default:\n                if (status >= 500) {\n                    console.error('Erreur serveur:', error.response?.data);\n                }\n        }\n        \n        return Promise.reject(error);\n    }\n);\nconst authService = {\n    register: async (userData) => {\n        try {\n            if (!userData.email || !userData.password || !userData.firstname || !userData.lastname) {\n                throw new Error('Tous les champs sont requis');\n            }\n            \n            if (userData.password.length < 8) {\n                throw new Error('Le mot de passe doit contenir au moins 8 caractères');\n            }\n            \n            if (!/[A-Z]/.test(userData.password)) {\n                throw new Error('Le mot de passe doit contenir au moins une majuscule');\n            }\n            \n            if (!/[0-9]/.test(userData.password)) {\n                throw new Error('Le mot de passe doit contenir au moins un chiffre');\n            }\n            \n            const sanitizedData = {\n                email: userData.email.trim().toLowerCase(),\n                password: userData.password,\n                firstname: userData.firstname.trim(),\n                lastname: userData.lastname.trim()\n            };\n            \n            const response = await api.post('/register', sanitizedData);\n            return response.data;\n        } catch (error) {\n            console.error('Erreur inscription:', error);\n            throw error.response?.data || { message: error.message };\n        }\n    },\n\n    login: async (credentials) => {\n        try {\n            if (!credentials.email || !credentials.password) {\n                throw new Error('Email et mot de passe requis');\n            }\n            \n            loginRateLimiter(credentials.email);\n            \n            const loginData = {\n                username: credentials.email.trim().toLowerCase(),\n                password: credentials.password\n            };\n            \n            const response = await api.post('/login', loginData);\n            const { token, user, refreshToken } = response.data;\n            \n            if (!token || !SecurityUtils.isValidJWT(token)) {\n                throw new Error('Token invalide reçu du serveur');\n            }\n            \n            localStorage.setItem('token', token);\n            \n            if (refreshToken && SecurityUtils.isValidJWT(refreshToken)) {\n                localStorage.setItem('refreshToken', refreshToken);\n            }\n            \n            if (user) {\n                const sanitizedUser = SecurityUtils.sanitizeUserData(user);\n                if (sanitizedUser) {\n                    localStorage.setItem('user', JSON.stringify(sanitizedUser));\n                }\n            }\n            \n            return response.data;\n        } catch (error) {\n            console.error('Erreur connexion:', error);\n            throw error.response?.data || { message: error.message };\n        }\n    },\n\n    logout: async () => {\n        try {\n            const token = localStorage.getItem('token');\n            \n            if (token && SecurityUtils.isValidJWT(token)) {\n                await api.post('/logout');\n            }\n        } catch (error) {\n            console.error('Erreur lors de la déconnexion serveur:', error);\n        } finally {\n            SecurityUtils.clearStorage();\n            window.location.replace('/login');\n        }\n    },\n\n    hasToken: () => {\n        const token = localStorage.getItem('token');\n        return token && SecurityUtils.isValidJWT(token);\n    },\n\n    isAuthenticated: async () => {\n        const token = localStorage.getItem('token');\n        \n        if (!token || !SecurityUtils.isValidJWT(token)) {\n            SecurityUtils.clearStorage();\n            return false;\n        }\n\n        try {\n            const response = await api.get('/user');\n            \n            if (response.data && response.data.id) {\n                return true;\n            } else {\n                throw new Error('Réponse utilisateur invalide');\n            }\n        } catch (error) {\n            console.warn('Vérification authentification échouée:', error.message);\n            SecurityUtils.clearStorage();\n            return false;\n        }\n    },\n\n    getToken: () => {\n        const token = localStorage.getItem('token');\n        return SecurityUtils.isValidJWT(token) ? token : null;\n    },\n\n    refreshToken: async () => {\n        try {\n            const refreshToken = localStorage.getItem('refreshToken');\n            \n            if (!refreshToken || !SecurityUtils.isValidJWT(refreshToken)) {\n                throw new Error('Refresh token invalide');\n            }\n            \n            const response = await api.post('/refresh-token', { refreshToken });\n            const { token: newToken } = response.data;\n            \n            if (!SecurityUtils.isValidJWT(newToken)) {\n                throw new Error('Nouveau token invalide');\n            }\n            \n            localStorage.setItem('token', newToken);\n            return newToken;\n        } catch (error) {\n            console.error('Erreur refresh token:', error);\n            SecurityUtils.clearStorage();\n            throw error;\n        }\n    },\n\n    getCurrentUser: () => {\n        try {\n            const userStr = localStorage.getItem('user');\n            if (!userStr) return null;\n            \n            const user = JSON.parse(userStr);\n            return SecurityUtils.sanitizeUserData(user);\n        } catch (error) {\n            console.error('Erreur parsing utilisateur:', error);\n            localStorage.removeItem('user');\n            return null;\n        }\n    },\n\n    canAccessAdmin: (userRole) => {\n        return userRole && (userRole === 'manager' || userRole === 'responsable_projet');\n    },\n\n    canModifyTasks: (userRole) => {\n        return userRole === 'responsable_projet';\n    },\n\n    canManageUsers: (userRole) => {\n        return userRole === 'responsable_projet';\n    },\n\n    canManageProject: (userRole) => {\n        return userRole === 'responsable_projet';\n    },\n\n    isManager: (userRole) => {\n        return userRole === 'manager';\n    },\n\n    isResponsableProjet: (userRole) => {\n        return userRole === 'responsable_projet';\n    },\n\n    isCollaborateur: (userRole) => {\n        return userRole === 'collaborateur';\n    },\n\n    canAccessAdminGlobally: (projects, userId) => {\n        if (!projects || !Array.isArray(projects) || !userId) return false;\n        \n        return projects.some(project => {\n            const userRole = authService.getUserRoleInProject(project, userId);\n            return userRole === 'manager' || userRole === 'responsable_projet';\n        });\n    },\n\n    getAdminAccessibleProjects: (projects, userId) => {\n        if (!projects || !Array.isArray(projects) || !userId) return [];\n        \n        return projects.filter(project => {\n            const userRole = authService.getUserRoleInProject(project, userId);\n            return userRole === 'manager' || userRole === 'responsable_projet';\n        });\n    },\n\n    getUserRoleInProject: (project, userId) => {\n        if (!project || !project.users || !userId) return null;\n        const userInProject = project.users.find(u => u.id === userId);\n        return userInProject?.role || null;\n    },\n\n    getCurrentUserRole: () => {\n        return localStorage.getItem('currentUserRole');\n    },\n\n    setCurrentUserRole: (role) => {\n        if (role) {\n            localStorage.setItem('currentUserRole', role);\n        } else {\n            localStorage.removeItem('currentUserRole');\n        }\n    },\n\n    validatePassword: (password) => {\n        const minLength = 8;\n        const hasUpperCase = /[A-Z]/.test(password);\n        const hasLowerCase = /[a-z]/.test(password);\n        const hasNumbers = /\\d/.test(password);\n        const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n        \n        const errors = [];\n        \n        if (password.length < minLength) {\n            errors.push(`Au moins ${minLength} caractères`);\n        }\n        if (!hasUpperCase) {\n            errors.push('Une majuscule');\n        }\n        if (!hasLowerCase) {\n            errors.push('Une minuscule');\n        }\n        if (!hasNumbers) {\n            errors.push('Un chiffre');\n        }\n        if (!hasSpecialChar) {\n            errors.push('Un caractère spécial');\n        }\n        \n        return {\n            isValid: errors.length === 0,\n            errors: errors,\n            strength: errors.length === 0 ? 'Fort' : \n                     errors.length <= 2 ? 'Moyen' : 'Faible'\n        };\n    }\n};\n\nexport default authService;","import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000/api';\n\nconst api = axios.create({\n    baseURL: API_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n    timeout: 10000,\n});\n\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (error.response?.status === 401) {\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            window.location.replace('/login');\n        }\n        return Promise.reject(error);\n    }\n);\n\nconst profileService = {\n    getProfile: async () => {\n        try {\n            const response = await api.get('/user');\n            return response.data;\n        } catch (error) {\n            throw error.response?.data || error.message;\n        }\n    },\n\n    updateProfile: async (userData) => {\n        try {\n            const response = await api.put('/user', userData);\n            return response.data?.user ?? response.data;\n        } catch (error) {\n            throw error.response?.data || error.message;\n        }\n    },\n};\n\nexport default profileService;\n"],"names":["Footer","useNavigate","_jsx","className","children","_jsxs","viewBox","fill","x","y","width","height","rx","stroke","strokeWidth","d","href","Register","formData","setFormData","useState","email","password","firstname","lastname","loading","setLoading","error","setError","success","setSuccess","passwordError","setPasswordError","passwordValidation","setPasswordValidation","length","uppercase","number","navigate","handleChange","e","name","value","target","_objectSpread","validation","test","errors","push","concat","join","Header","type","onClick","style","float","background","border","color","cursor","onSubmit","async","preventDefault","hasUppercase","hasNumber","hasMinLength","authService","register","setTimeout","console","message","includes","onChange","placeholder","required","disabled","cx","cy","r","isMenuOpen","setIsMenuOpen","isAuthenticated","setIsAuthenticated","canAccessAdmin","setCanAccessAdmin","location","useLocation","useEffect","userProfile","profileService","getProfile","dashboardServices","projectsData","getProjects","hasAdminAccess","canAccessAdminGlobally","projects","id","checkAuth","pathname","_Fragment","toggleMenu","API_URL","process","REACT_APP_API_URL","api","axios","create","baseURL","headers","timeout","SecurityUtils","token","parts","split","header","JSON","parse","atob","alg","typ","payload","now","Math","floor","Date","exp","clearStorage","localStorage","removeItem","sessionStorage","clear","document","cookie","forEach","eqPos","indexOf","substr","userData","_userData$firstname","_userData$lastname","trim","role","loginRateLimiter","maxRequests","arguments","undefined","windowMs","requests","Map","key","windowStart","has","set","userRequests","get","filter","time","Error","interceptors","request","use","config","getItem","Authorization","warn","random","toString","Promise","reject","response","_error$response","status","publicPaths","currentPath","window","some","path","setItem","replace","data","_error$response2","sanitizedData","toLowerCase","post","_error$response3","login","credentials","loginData","username","user","refreshToken","sanitizedUser","stringify","_error$response4","logout","hasToken","getToken","newToken","getCurrentUser","userStr","userRole","canModifyTasks","canManageUsers","canManageProject","isManager","isResponsableProjet","isCollaborateur","userId","Array","isArray","project","getUserRoleInProject","getAdminAccessibleProjects","users","userInProject","find","u","getCurrentUserRole","setCurrentUserRole","validatePassword","hasUpperCase","hasLowerCase","hasNumbers","hasSpecialChar","isValid","strength","updateProfile","_response$data$user","_response$data","put"],"sourceRoot":""}